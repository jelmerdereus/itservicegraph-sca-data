{"critical":[{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":45,"full_filename":"build-tools/src/main/java/org/elasticsearch/gradle/plugin/GeneratePluginPropertiesTask.java","filename":"build-tools/src/main/java/org/elasticsearch/gradle/plugin/GeneratePluginPropertiesTask.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":45,"end":45,"column":{"start":5,"end":96}},"sink":{"start":45,"end":45,"column":{"start":5,"end":96},"content":""},"parent_line_number":45,"fingerprint":"c3999a94dc943089fb2ccf2c669fa6f9_0","old_fingerprint":"c3999a94dc943089fb2ccf2c669fa6f9_25","code_extract":"    private static final String DESCRIPTION = \"Generates Elasticsearch Plugin descriptor file\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":65,"full_filename":"libs/ssl-config/src/main/java/org/elasticsearch/common/ssl/PemUtils.java","filename":"libs/ssl-config/src/main/java/org/elasticsearch/common/ssl/PemUtils.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":65,"end":65,"column":{"start":5,"end":98}},"sink":{"start":65,"end":65,"column":{"start":5,"end":98},"content":""},"parent_line_number":65,"fingerprint":"c8d6002b4fe22296af3a32e356adb1b6_0","old_fingerprint":"c8d6002b4fe22296af3a32e356adb1b6_36","code_extract":"    private static final String PKCS8_ENCRYPTED_HEADER = \"-----BEGIN ENCRYPTED PRIVATE KEY-----\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":89,"full_filename":"libs/ssl-config/src/main/java/org/elasticsearch/common/ssl/SslConfigurationKeys.java","filename":"libs/ssl-config/src/main/java/org/elasticsearch/common/ssl/SslConfigurationKeys.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":89,"end":89,"column":{"start":5,"end":86}},"sink":{"start":89,"end":89,"column":{"start":5,"end":86},"content":""},"parent_line_number":89,"fingerprint":"c613efdb13cb26bac2751c589ce5d61f_0","old_fingerprint":"c613efdb13cb26bac2751c589ce5d61f_51","code_extract":"    public static final String KEYSTORE_SECURE_PASSWORD = \"keystore.secure_password\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":99,"full_filename":"libs/ssl-config/src/main/java/org/elasticsearch/common/ssl/SslConfigurationKeys.java","filename":"libs/ssl-config/src/main/java/org/elasticsearch/common/ssl/SslConfigurationKeys.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":99,"end":99,"column":{"start":5,"end":94}},"sink":{"start":99,"end":99,"column":{"start":5,"end":94},"content":""},"parent_line_number":99,"fingerprint":"c613efdb13cb26bac2751c589ce5d61f_1","old_fingerprint":"c613efdb13cb26bac2751c589ce5d61f_58","code_extract":"    public static final String KEYSTORE_SECURE_KEY_PASSWORD = \"keystore.secure_key_password\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":105,"full_filename":"libs/ssl-config/src/main/java/org/elasticsearch/common/ssl/SslConfigurationKeys.java","filename":"libs/ssl-config/src/main/java/org/elasticsearch/common/ssl/SslConfigurationKeys.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":105,"end":105,"column":{"start":5,"end":87}},"sink":{"start":105,"end":105,"column":{"start":5,"end":87},"content":""},"parent_line_number":105,"fingerprint":"c613efdb13cb26bac2751c589ce5d61f_2","old_fingerprint":"c613efdb13cb26bac2751c589ce5d61f_60","code_extract":"    public static final String KEYSTORE_LEGACY_KEY_PASSWORD = \"keystore.key_password\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":62,"full_filename":"modules/reindex/src/internalClusterTest/java/org/elasticsearch/migration/AbstractFeatureMigrationIntegTest.java","filename":"modules/reindex/src/internalClusterTest/java/org/elasticsearch/migration/AbstractFeatureMigrationIntegTest.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":62,"end":62,"column":{"start":5,"end":75}},"sink":{"start":62,"end":62,"column":{"start":5,"end":75},"content":""},"parent_line_number":62,"fingerprint":"c7b2c905c070e1a1da4431c4449fbb13_0","old_fingerprint":"c7b2c905c070e1a1da4431c4449fbb13_34","code_extract":"    static final String DESCRIPTOR_MANAGED_META_KEY = \"desciptor_managed\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":63,"full_filename":"modules/reindex/src/internalClusterTest/java/org/elasticsearch/migration/AbstractFeatureMigrationIntegTest.java","filename":"modules/reindex/src/internalClusterTest/java/org/elasticsearch/migration/AbstractFeatureMigrationIntegTest.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":63,"end":63,"column":{"start":5,"end":78}},"sink":{"start":63,"end":63,"column":{"start":5,"end":78},"content":""},"parent_line_number":63,"fingerprint":"c7b2c905c070e1a1da4431c4449fbb13_1","old_fingerprint":"c7b2c905c070e1a1da4431c4449fbb13_35","code_extract":"    static final String DESCRIPTOR_INTERNAL_META_KEY = \"descriptor_internal\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":505,"full_filename":"modules/repository-s3/src/internalClusterTest/java/org/elasticsearch/repositories/s3/S3BlobStoreRepositoryTests.java","filename":"modules/repository-s3/src/internalClusterTest/java/org/elasticsearch/repositories/s3/S3BlobStoreRepositoryTests.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":505,"end":505,"column":{"start":17,"end":56}},"sink":{"start":505,"end":505,"column":{"start":17,"end":56},"content":""},"parent_line_number":505,"fingerprint":"8d69cae888df5d64ef21d844ff748a44_0","old_fingerprint":"8d69cae888df5d64ef21d844ff748a44_111","code_extract":"            if (\"AWS3SignerType\".equals(signerOverride)) {"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":507,"full_filename":"modules/repository-s3/src/internalClusterTest/java/org/elasticsearch/repositories/s3/S3BlobStoreRepositoryTests.java","filename":"modules/repository-s3/src/internalClusterTest/java/org/elasticsearch/repositories/s3/S3BlobStoreRepositoryTests.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":507,"end":507,"column":{"start":24,"end":63}},"sink":{"start":507,"end":507,"column":{"start":24,"end":63},"content":""},"parent_line_number":507,"fingerprint":"8d69cae888df5d64ef21d844ff748a44_1","old_fingerprint":"8d69cae888df5d64ef21d844ff748a44_112","code_extract":"            } else if (\"AWS4SignerType\".equals(signerOverride)) {"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":35,"full_filename":"server/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthResponse.java","filename":"server/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthResponse.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":35,"end":35,"column":{"start":5,"end":71}},"sink":{"start":35,"end":35,"column":{"start":5,"end":71},"content":""},"parent_line_number":35,"fingerprint":"a9d3fafad0d103b81c6d0a3a2acead5a_0","old_fingerprint":"a9d3fafad0d103b81c6d0a3a2acead5a_15","code_extract":"    static final String NUMBER_OF_DATA_NODES = \"number_of_data_nodes\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":430,"full_filename":"server/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsNodes.java","filename":"server/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsNodes.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":430,"end":430,"column":{"start":13,"end":81}},"sink":{"start":430,"end":430,"column":{"start":13,"end":81},"content":""},"parent_line_number":430,"fingerprint":"833e5d9c36477f8e3be611d03725cb09_0","old_fingerprint":"833e5d9c36477f8e3be611d03725cb09_106","code_extract":"            static final String OPEN_FILE_DESCRIPTORS = \"open_file_descriptors\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":176,"full_filename":"server/src/main/java/org/elasticsearch/cluster/routing/allocation/shards/ShardsAvailabilityHealthIndicatorService.java","filename":"server/src/main/java/org/elasticsearch/cluster/routing/allocation/shards/ShardsAvailabilityHealthIndicatorService.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":176,"end":176,"column":{"start":5,"end":84}},"sink":{"start":176,"end":176,"column":{"start":5,"end":84},"content":""},"parent_line_number":176,"fingerprint":"c95462c95742f487741449e1c879fdaf_0","old_fingerprint":"c95462c95742f487741449e1c879fdaf_88","code_extract":"    public static final String PRIMARY_UNASSIGNED_IMPACT_ID = \"primary_unassigned\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":177,"full_filename":"server/src/main/java/org/elasticsearch/cluster/routing/allocation/shards/ShardsAvailabilityHealthIndicatorService.java","filename":"server/src/main/java/org/elasticsearch/cluster/routing/allocation/shards/ShardsAvailabilityHealthIndicatorService.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":177,"end":177,"column":{"start":5,"end":104}},"sink":{"start":177,"end":177,"column":{"start":5,"end":104},"content":""},"parent_line_number":177,"fingerprint":"c95462c95742f487741449e1c879fdaf_1","old_fingerprint":"c95462c95742f487741449e1c879fdaf_90","code_extract":"    public static final String READ_ONLY_PRIMARY_UNASSIGNED_IMPACT_ID = \"read_only_primary_unassigned\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":178,"full_filename":"server/src/main/java/org/elasticsearch/cluster/routing/allocation/shards/ShardsAvailabilityHealthIndicatorService.java","filename":"server/src/main/java/org/elasticsearch/cluster/routing/allocation/shards/ShardsAvailabilityHealthIndicatorService.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":178,"end":178,"column":{"start":5,"end":84}},"sink":{"start":178,"end":178,"column":{"start":5,"end":84},"content":""},"parent_line_number":178,"fingerprint":"c95462c95742f487741449e1c879fdaf_2","old_fingerprint":"c95462c95742f487741449e1c879fdaf_91","code_extract":"    public static final String REPLICA_UNASSIGNED_IMPACT_ID = \"replica_unassigned\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":139,"full_filename":"server/src/main/java/org/elasticsearch/health/node/DiskHealthIndicatorService.java","filename":"server/src/main/java/org/elasticsearch/health/node/DiskHealthIndicatorService.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":139,"end":139,"column":{"start":9,"end":98}},"sink":{"start":139,"end":139,"column":{"start":9,"end":98},"content":""},"parent_line_number":139,"fingerprint":"7d20a84c25dc7672b378d76986eee251_0","old_fingerprint":"7d20a84c25dc7672b378d76986eee251_73","code_extract":"        public static final String NODES_WITH_ENOUGH_DISK_SPACE = \"nodes_with_enough_disk_space\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":140,"full_filename":"server/src/main/java/org/elasticsearch/health/node/DiskHealthIndicatorService.java","filename":"server/src/main/java/org/elasticsearch/health/node/DiskHealthIndicatorService.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":140,"end":140,"column":{"start":9,"end":106}},"sink":{"start":140,"end":140,"column":{"start":9,"end":106},"content":""},"parent_line_number":140,"fingerprint":"7d20a84c25dc7672b378d76986eee251_1","old_fingerprint":"7d20a84c25dc7672b378d76986eee251_74","code_extract":"        public static final String NODES_OVER_FLOOD_STAGE_WATERMARK = \"nodes_over_flood_stage_watermark\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":141,"full_filename":"server/src/main/java/org/elasticsearch/health/node/DiskHealthIndicatorService.java","filename":"server/src/main/java/org/elasticsearch/health/node/DiskHealthIndicatorService.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":141,"end":141,"column":{"start":9,"end":92}},"sink":{"start":141,"end":141,"column":{"start":9,"end":92},"content":""},"parent_line_number":141,"fingerprint":"7d20a84c25dc7672b378d76986eee251_2","old_fingerprint":"7d20a84c25dc7672b378d76986eee251_75","code_extract":"        public static final String NODES_OVER_HIGH_WATERMARK = \"nodes_over_high_watermark\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":142,"full_filename":"server/src/main/java/org/elasticsearch/health/node/DiskHealthIndicatorService.java","filename":"server/src/main/java/org/elasticsearch/health/node/DiskHealthIndicatorService.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":142,"end":142,"column":{"start":9,"end":102}},"sink":{"start":142,"end":142,"column":{"start":9,"end":102},"content":""},"parent_line_number":142,"fingerprint":"7d20a84c25dc7672b378d76986eee251_3","old_fingerprint":"7d20a84c25dc7672b378d76986eee251_76","code_extract":"        public static final String NODES_WITH_UNKNOWN_DISK_STATUS = \"nodes_with_unknown_disk_status\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":77,"full_filename":"server/src/main/java/org/elasticsearch/monitor/process/ProcessStats.java","filename":"server/src/main/java/org/elasticsearch/monitor/process/ProcessStats.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":77,"end":77,"column":{"start":9,"end":77}},"sink":{"start":77,"end":77,"column":{"start":9,"end":77},"content":""},"parent_line_number":77,"fingerprint":"7bc155f85d4a46d44d7e8929db5ea760_0","old_fingerprint":"7bc155f85d4a46d44d7e8929db5ea760_42","code_extract":"        static final String OPEN_FILE_DESCRIPTORS = \"open_file_descriptors\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":78,"full_filename":"server/src/main/java/org/elasticsearch/monitor/process/ProcessStats.java","filename":"server/src/main/java/org/elasticsearch/monitor/process/ProcessStats.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":78,"end":78,"column":{"start":9,"end":75}},"sink":{"start":78,"end":78,"column":{"start":9,"end":75},"content":""},"parent_line_number":78,"fingerprint":"7bc155f85d4a46d44d7e8929db5ea760_1","old_fingerprint":"7bc155f85d4a46d44d7e8929db5ea760_43","code_extract":"        static final String MAX_FILE_DESCRIPTORS = \"max_file_descriptors\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":44,"full_filename":"server/src/main/java/org/elasticsearch/plugins/PluginDescriptor.java","filename":"server/src/main/java/org/elasticsearch/plugins/PluginDescriptor.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":44,"end":44,"column":{"start":5,"end":94}},"sink":{"start":44,"end":44,"column":{"start":5,"end":94},"content":""},"parent_line_number":44,"fingerprint":"2040fb8badef7ffe0a883e116e4f5168_0","old_fingerprint":"2040fb8badef7ffe0a883e116e4f5168_20","code_extract":"    public static final String INTERNAL_DESCRIPTOR_FILENAME = \"plugin-descriptor.properties\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":45,"full_filename":"server/src/main/java/org/elasticsearch/plugins/PluginDescriptor.java","filename":"server/src/main/java/org/elasticsearch/plugins/PluginDescriptor.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":45,"end":45,"column":{"start":5,"end":99}},"sink":{"start":45,"end":45,"column":{"start":5,"end":99},"content":""},"parent_line_number":45,"fingerprint":"2040fb8badef7ffe0a883e116e4f5168_1","old_fingerprint":"2040fb8badef7ffe0a883e116e4f5168_22","code_extract":"    public static final String STABLE_DESCRIPTOR_FILENAME = \"stable-plugin-descriptor.properties\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":58,"full_filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/common/validation/SourceDestValidator.java","filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/common/validation/SourceDestValidator.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":58,"end":58,"column":{"start":5,"end":114}},"sink":{"start":58,"end":58,"column":{"start":5,"end":114},"content":""},"parent_line_number":58,"fingerprint":"cf1b268c795a129900a7d747b25c4605_0","old_fingerprint":"cf1b268c795a129900a7d747b25c4605_32","code_extract":"    public static final String DEST_IN_SOURCE = \"Destination index [{0}] is included in source expression [{1}]\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":59,"full_filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/common/validation/SourceDestValidator.java","filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/common/validation/SourceDestValidator.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":59,"end":59,"column":{"start":5,"end":93}},"sink":{"start":59,"end":59,"column":{"start":5,"end":93},"content":""},"parent_line_number":59,"fingerprint":"cf1b268c795a129900a7d747b25c4605_1","old_fingerprint":"cf1b268c795a129900a7d747b25c4605_33","code_extract":"    public static final String DEST_LOWERCASE = \"Destination index [{0}] must be lowercase\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":34,"full_filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/MlTasks.java","filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/MlTasks.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":34,"end":34,"column":{"start":5,"end":96}},"sink":{"start":34,"end":34,"column":{"start":5,"end":96},"content":""},"parent_line_number":34,"fingerprint":"4d6b893d1225c13dda9ecd619c9056a7_0","old_fingerprint":"4d6b893d1225c13dda9ecd619c9056a7_14","code_extract":"    public static final String TRAINED_MODEL_ASSIGNMENT_TASK_TYPE = \"trained_model_assignment\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":35,"full_filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/MlTasks.java","filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/MlTasks.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":35,"end":35,"column":{"start":5,"end":110}},"sink":{"start":35,"end":35,"column":{"start":5,"end":110},"content":""},"parent_line_number":35,"fingerprint":"4d6b893d1225c13dda9ecd619c9056a7_1","old_fingerprint":"4d6b893d1225c13dda9ecd619c9056a7_18","code_extract":"    public static final String TRAINED_MODEL_ASSIGNMENT_TASK_ACTION = \"xpack/ml/trained_model_assignment[n]\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":52,"full_filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/action/GetDatafeedsStatsAction.java","filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/action/GetDatafeedsStatsAction.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":52,"end":52,"column":{"start":5,"end":83}},"sink":{"start":52,"end":52,"column":{"start":5,"end":83},"content":""},"parent_line_number":52,"fingerprint":"687ff3472604da8f420b54948fa0b9fd_0","old_fingerprint":"687ff3472604da8f420b54948fa0b9fd_28","code_extract":"    private static final String ASSIGNMENT_EXPLANATION = \"assignment_explanation\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":45,"full_filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/action/GetJobModelSnapshotsUpgradeStatsAction.java","filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/action/GetJobModelSnapshotsUpgradeStatsAction.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":45,"end":45,"column":{"start":5,"end":83}},"sink":{"start":45,"end":45,"column":{"start":5,"end":83},"content":""},"parent_line_number":45,"fingerprint":"6f85fddc13bace7888b2e2c734645b3e_0","old_fingerprint":"6f85fddc13bace7888b2e2c734645b3e_24","code_extract":"    private static final String ASSIGNMENT_EXPLANATION = \"assignment_explanation\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":55,"full_filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/action/GetJobsStatsAction.java","filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/action/GetJobsStatsAction.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":55,"end":55,"column":{"start":5,"end":83}},"sink":{"start":55,"end":55,"column":{"start":5,"end":83},"content":""},"parent_line_number":55,"fingerprint":"0b8dee69503fffa37852bb0a5bfd9ab9_0","old_fingerprint":"0b8dee69503fffa37852bb0a5bfd9ab9_30","code_extract":"    private static final String ASSIGNMENT_EXPLANATION = \"assignment_explanation\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":79,"full_filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/job/messages/Messages.java","filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/job/messages/Messages.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":79,"end":79,"column":{"start":5,"end":116}},"sink":{"start":79,"end":79,"column":{"start":5,"end":116},"content":""},"parent_line_number":79,"fingerprint":"f58bae7885eb020ff8c14bc050995e00_0","old_fingerprint":"f58bae7885eb020ff8c14bc050995e00_45","code_extract":"    public static final String DATA_FRAME_ANALYTICS_AUDIT_CREATING_DEST_INDEX = \"Creating destination index [{0}]\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":80,"full_filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/job/messages/Messages.java","filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/job/messages/Messages.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":80,"end":80,"column":{"start":5,"end":121}},"sink":{"start":80,"end":80,"column":{"start":5,"end":121},"content":""},"parent_line_number":80,"fingerprint":"f58bae7885eb020ff8c14bc050995e00_1","old_fingerprint":"f58bae7885eb020ff8c14bc050995e00_47","code_extract":"    public static final String DATA_FRAME_ANALYTICS_AUDIT_REUSING_DEST_INDEX = \"Using existing destination index [{0}]\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":129,"full_filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/job/messages/Messages.java","filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/job/messages/Messages.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":129,"end":129,"column":{"start":5,"end":110}},"sink":{"start":129,"end":129,"column":{"start":5,"end":110},"content":""},"parent_line_number":129,"fingerprint":"f58bae7885eb020ff8c14bc050995e00_2","old_fingerprint":"f58bae7885eb020ff8c14bc050995e00_66","code_extract":"    public static final String INFERENCE_FAILED_TO_DESERIALIZE = \"Could not deserialize trained model [{0}]\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":144,"full_filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/job/messages/Messages.java","filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/job/messages/Messages.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":144,"end":145,"column":{"start":5,"end":132}},"sink":{"start":144,"end":145,"column":{"start":5,"end":132},"content":""},"parent_line_number":144,"fingerprint":"f58bae7885eb020ff8c14bc050995e00_3","old_fingerprint":"f58bae7885eb020ff8c14bc050995e00_78","code_extract":"    public static final String TRAINED_MODEL_INPUTS_DIFFER_SIGNIFICANTLY =\n        \"The input fields for new model [{0}] and for old model [{1}] differ significantly, model results may change drastically.\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":233,"full_filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/job/messages/Messages.java","filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/job/messages/Messages.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":233,"end":233,"column":{"start":5,"end":103}},"sink":{"start":233,"end":233,"column":{"start":5,"end":103},"content":""},"parent_line_number":233,"fingerprint":"f58bae7885eb020ff8c14bc050995e00_4","old_fingerprint":"f58bae7885eb020ff8c14bc050995e00_94","code_extract":"    public static final String JOB_CONFIG_MISSING_DATA_DESCRIPTION = \"A data_description must be set\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":25,"full_filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authc/AuthenticationField.java","filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authc/AuthenticationField.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":25,"end":25,"column":{"start":5,"end":100}},"sink":{"start":25,"end":25,"column":{"start":5,"end":100},"content":""},"parent_line_number":25,"fingerprint":"15b24ab71a87c995d92e3e7fd795f2c3_0","old_fingerprint":"15b24ab71a87c995d92e3e7fd795f2c3_6","code_extract":"    public static final String API_KEY_ROLE_DESCRIPTORS_KEY = \"_security_api_key_role_descriptors\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":26,"full_filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authc/AuthenticationField.java","filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authc/AuthenticationField.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":26,"end":26,"column":{"start":5,"end":119}},"sink":{"start":26,"end":26,"column":{"start":5,"end":119},"content":""},"parent_line_number":26,"fingerprint":"15b24ab71a87c995d92e3e7fd795f2c3_1","old_fingerprint":"15b24ab71a87c995d92e3e7fd795f2c3_7","code_extract":"    public static final String API_KEY_LIMITED_ROLE_DESCRIPTORS_KEY = \"_security_api_key_limited_by_role_descriptors\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":25,"full_filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/TransformMessages.java","filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/TransformMessages.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":25,"end":25,"column":{"start":5,"end":117}},"sink":{"start":25,"end":25,"column":{"start":5,"end":117},"content":""},"parent_line_number":25,"fingerprint":"414968ba79a5e30722a5f648e65fc1cd_0","old_fingerprint":"414968ba79a5e30722a5f648e65fc1cd_5","code_extract":"    public static final String REST_PUT_TRANSFORM_FAILED_TO_DEDUCE_DEST_MAPPINGS = \"Failed to deduce dest mappings\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":35,"full_filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/TransformMessages.java","filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/TransformMessages.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":35,"end":36,"column":{"start":5,"end":100}},"sink":{"start":35,"end":36,"column":{"start":5,"end":100},"content":""},"parent_line_number":35,"fingerprint":"414968ba79a5e30722a5f648e65fc1cd_1","old_fingerprint":"414968ba79a5e30722a5f648e65fc1cd_19","code_extract":"    public static final String REST_WARN_NO_TRANSFORM_NODES =\n        \"Transform requires the transform node role for at least 1 node, found no transform nodes\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":44,"full_filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/TransformMessages.java","filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/TransformMessages.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":44,"end":44,"column":{"start":5,"end":132}},"sink":{"start":44,"end":44,"column":{"start":5,"end":132},"content":""},"parent_line_number":44,"fingerprint":"414968ba79a5e30722a5f648e65fc1cd_2","old_fingerprint":"414968ba79a5e30722a5f648e65fc1cd_21","code_extract":"    public static final String FAILED_TO_CREATE_DESTINATION_INDEX = \"Could not create destination index [{0}] for transform [{1}]\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":45,"full_filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/TransformMessages.java","filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/TransformMessages.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":45,"end":46,"column":{"start":5,"end":84}},"sink":{"start":45,"end":46,"column":{"start":5,"end":84},"content":""},"parent_line_number":45,"fingerprint":"414968ba79a5e30722a5f648e65fc1cd_3","old_fingerprint":"414968ba79a5e30722a5f648e65fc1cd_23","code_extract":"    public static final String FAILED_TO_SET_UP_DESTINATION_ALIASES =\n        \"Could not set up aliases for destination index [{0}] for transform [{1}]\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":52,"full_filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/action/PreviewTransformAction.java","filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/action/PreviewTransformAction.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":52,"end":52,"column":{"start":5,"end":96}},"sink":{"start":52,"end":52,"column":{"start":5,"end":96},"content":""},"parent_line_number":52,"fingerprint":"0d11eae1de1919022d6a6ba4a0d3ceba_0","old_fingerprint":"0d11eae1de1919022d6a6ba4a0d3ceba_27","code_extract":"    public static final String DUMMY_DEST_INDEX_FOR_PREVIEW = \"unused-transform-preview-index\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":53,"full_filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/watcher/crypto/CryptoService.java","filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/watcher/crypto/CryptoService.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":53,"end":53,"column":{"start":5,"end":84}},"sink":{"start":53,"end":53,"column":{"start":5,"end":84},"content":""},"parent_line_number":53,"fingerprint":"c57cf87f84410b5b9220f5a86b36f330_0","old_fingerprint":"c57cf87f84410b5b9220f5a86b36f330_29","code_extract":"    private static final String DEFAULT_ENCRYPTION_ALGORITHM = \"AES/CTR/NoPadding\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":12,"full_filename":"x-pack/plugin/ent-search/src/main/java/org/elasticsearch/xpack/application/connector/secrets/ConnectorSecretsConstants.java","filename":"x-pack/plugin/ent-search/src/main/java/org/elasticsearch/xpack/application/connector/secrets/ConnectorSecretsConstants.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":12,"end":12,"column":{"start":5,"end":132}},"sink":{"start":12,"end":12,"column":{"start":5,"end":132},"content":""},"parent_line_number":12,"fingerprint":"73412d76acf7d9e8a5b228accf9376a2_0","old_fingerprint":"73412d76acf7d9e8a5b228accf9376a2_0","code_extract":"    public static final String CONNECTOR_SECRET_ID_NULL_OR_EMPTY_MESSAGE = \"[id] of the connector secret cannot be null or empty.\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":27,"full_filename":"x-pack/plugin/graph/qa/with-security/src/yamlRestTest/java/org/elasticsearch/smoketest/GraphWithSecurityIT.java","filename":"x-pack/plugin/graph/qa/with-security/src/yamlRestTest/java/org/elasticsearch/smoketest/GraphWithSecurityIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":27,"end":27,"column":{"start":5,"end":78}},"sink":{"start":27,"end":27,"column":{"start":5,"end":78},"content":""},"parent_line_number":27,"fingerprint":"9d87bd9c3b8960c90f7500facd430ece_0","old_fingerprint":"9d87bd9c3b8960c90f7500facd430ece_8","code_extract":"    private static final String TEST_ADMIN_PASSWORD = \"x-pack-test-password\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":708,"full_filename":"x-pack/plugin/ml/qa/native-multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/ml/integration/ClassificationIT.java","filename":"x-pack/plugin/ml/qa/native-multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/ml/integration/ClassificationIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":708,"end":708,"column":{"start":9,"end":57}},"sink":{"start":708,"end":708,"column":{"start":9,"end":57},"content":""},"parent_line_number":708,"fingerprint":"5eab70d8ff4f8e0f21144d8e5e0a11dc_0","old_fingerprint":"5eab70d8ff4f8e0f21144d8e5e0a11dc_115","code_extract":"        String firstJobDestIndex = firstJobId + \"_dest\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":730,"full_filename":"x-pack/plugin/ml/qa/native-multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/ml/integration/ClassificationIT.java","filename":"x-pack/plugin/ml/qa/native-multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/ml/integration/ClassificationIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":730,"end":730,"column":{"start":9,"end":59}},"sink":{"start":730,"end":730,"column":{"start":9,"end":59},"content":""},"parent_line_number":730,"fingerprint":"5eab70d8ff4f8e0f21144d8e5e0a11dc_1","old_fingerprint":"5eab70d8ff4f8e0f21144d8e5e0a11dc_116","code_extract":"        String secondJobDestIndex = secondJobId + \"_dest\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":370,"full_filename":"x-pack/plugin/ml/qa/native-multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/ml/integration/RegressionIT.java","filename":"x-pack/plugin/ml/qa/native-multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/ml/integration/RegressionIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":370,"end":370,"column":{"start":9,"end":57}},"sink":{"start":370,"end":370,"column":{"start":9,"end":57},"content":""},"parent_line_number":370,"fingerprint":"c33326c3e7c34c94f279eebdb0f1fb57_0","old_fingerprint":"c33326c3e7c34c94f279eebdb0f1fb57_99","code_extract":"        String firstJobDestIndex = firstJobId + \"_dest\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":392,"full_filename":"x-pack/plugin/ml/qa/native-multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/ml/integration/RegressionIT.java","filename":"x-pack/plugin/ml/qa/native-multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/ml/integration/RegressionIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":392,"end":392,"column":{"start":9,"end":59}},"sink":{"start":392,"end":392,"column":{"start":9,"end":59},"content":""},"parent_line_number":392,"fingerprint":"c33326c3e7c34c94f279eebdb0f1fb57_1","old_fingerprint":"c33326c3e7c34c94f279eebdb0f1fb57_101","code_extract":"        String secondJobDestIndex = secondJobId + \"_dest\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":425,"full_filename":"x-pack/plugin/ml/qa/native-multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/ml/integration/RunDataFrameAnalyticsIT.java","filename":"x-pack/plugin/ml/qa/native-multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/ml/integration/RunDataFrameAnalyticsIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":425,"end":425,"column":{"start":9,"end":90}},"sink":{"start":425,"end":425,"column":{"start":9,"end":90},"content":""},"parent_line_number":425,"fingerprint":"467ed374d70eb570ff03a3ca91801d78_0","old_fingerprint":"467ed374d70eb570ff03a3ca91801d78_103","code_extract":"        String destIndex = \"test-outlier-detection-with-multiple-source-indices-results\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":494,"full_filename":"x-pack/plugin/ml/qa/native-multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/ml/integration/RunDataFrameAnalyticsIT.java","filename":"x-pack/plugin/ml/qa/native-multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/ml/integration/RunDataFrameAnalyticsIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":494,"end":494,"column":{"start":9,"end":90}},"sink":{"start":494,"end":494,"column":{"start":9,"end":90},"content":""},"parent_line_number":494,"fingerprint":"467ed374d70eb570ff03a3ca91801d78_1","old_fingerprint":"467ed374d70eb570ff03a3ca91801d78_110","code_extract":"        String destIndex = \"test-outlier-detection-with-pre-existing-dest-index-results\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":19,"full_filename":"x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/DefaultMachineLearningExtension.java","filename":"x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/DefaultMachineLearningExtension.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":19,"end":27,"column":{"start":5,"end":79}},"sink":{"start":19,"end":27,"column":{"start":5,"end":79},"content":""},"parent_line_number":19,"fingerprint":"af524104ec6f879e43adc9f1f7c66c20_0","old_fingerprint":"af524104ec6f879e43adc9f1f7c66c20_1","code_extract":"    public static final String[] ANALYTICS_DEST_INDEX_ALLOWED_SETTINGS = {\n        IndexMetadata.SETTING_NUMBER_OF_SHARDS,\n        IndexMetadata.SETTING_NUMBER_OF_REPLICAS,\n        ...omitted (buffer value 3)\n        MapperService.INDEX_MAPPING_NESTED_DOCS_LIMIT_SETTING.getKey(),\n        MapperService.INDEX_MAPPING_FIELD_NAME_LENGTH_LIMIT_SETTING.getKey(),\n        MapperService.INDEX_MAPPING_DIMENSION_FIELDS_LIMIT_SETTING.getKey() };"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":826,"full_filename":"x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/MachineLearning.java","filename":"x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/MachineLearning.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":826,"end":826,"column":{"start":9,"end":80}},"sink":{"start":826,"end":826,"column":{"start":9,"end":80},"content":""},"parent_line_number":826,"fingerprint":"6c9cf71e037c8a61788e130eeb1b36ea_0","old_fingerprint":"6c9cf71e037c8a61788e130eeb1b36ea_117","code_extract":"        String machineMemoryAttrName = \"node.attr.\" + MACHINE_MEMORY_NODE_ATTR;"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":76,"full_filename":"x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/assignment/TrainedModelAssignmentNodeService.java","filename":"x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/assignment/TrainedModelAssignmentNodeService.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":76,"end":76,"column":{"start":5,"end":104}},"sink":{"start":76,"end":76,"column":{"start":5,"end":104},"content":""},"parent_line_number":76,"fingerprint":"577565ad9758b80b0fedc0497fa8f083_0","old_fingerprint":"577565ad9758b80b0fedc0497fa8f083_41","code_extract":"    private static final String ASSIGNMENT_NO_LONGER_EXISTS = \"deployment assignment no longer exists\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":28,"full_filename":"x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/util/NumericUtils.java","filename":"x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/util/NumericUtils.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":28,"end":28,"column":{"start":5,"end":83}},"sink":{"start":28,"end":28,"column":{"start":5,"end":83},"content":""},"parent_line_number":28,"fingerprint":"5e360051358e94e4a3a67eed4b07e187_0","old_fingerprint":"5e360051358e94e4a3a67eed4b07e187_9","code_extract":"    private static final String UNSIGNED_LONG_OVERFLOW = \"unsigned_long overflow\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":82,"full_filename":"x-pack/plugin/security/cli/src/main/java/org/elasticsearch/xpack/security/cli/CertificateGenerateTool.java","filename":"x-pack/plugin/security/cli/src/main/java/org/elasticsearch/xpack/security/cli/CertificateGenerateTool.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":82,"end":82,"column":{"start":5,"end":112}},"sink":{"start":82,"end":82,"column":{"start":5,"end":112},"content":""},"parent_line_number":82,"fingerprint":"c004f115be3470808e6ebe5e4cf96bdb_0","old_fingerprint":"c004f115be3470808e6ebe5e4cf96bdb_48","code_extract":"    private static final String DESCRIPTION = \"Simplifies certificate creation for use with the Elastic Stack\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":84,"full_filename":"x-pack/plugin/security/cli/src/main/java/org/elasticsearch/xpack/security/cli/CertificateGenerateTool.java","filename":"x-pack/plugin/security/cli/src/main/java/org/elasticsearch/xpack/security/cli/CertificateGenerateTool.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":84,"end":84,"column":{"start":5,"end":78}},"sink":{"start":84,"end":84,"column":{"start":5,"end":78},"content":""},"parent_line_number":84,"fingerprint":"c004f115be3470808e6ebe5e4cf96bdb_1","old_fingerprint":"c004f115be3470808e6ebe5e4cf96bdb_49","code_extract":"    private static final String DEFAULT_CERT_FILE = \"certificate-bundle.zip\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":92,"full_filename":"x-pack/plugin/security/cli/src/main/java/org/elasticsearch/xpack/security/cli/CertificateTool.java","filename":"x-pack/plugin/security/cli/src/main/java/org/elasticsearch/xpack/security/cli/CertificateTool.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":92,"end":92,"column":{"start":5,"end":112}},"sink":{"start":92,"end":92,"column":{"start":5,"end":112},"content":""},"parent_line_number":92,"fingerprint":"8bf348d1ed8afc55819f7b9ca1caa8c8_0","old_fingerprint":"8bf348d1ed8afc55819f7b9ca1caa8c8_53","code_extract":"    private static final String DESCRIPTION = \"Simplifies certificate creation for use with the Elastic Stack\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":94,"full_filename":"x-pack/plugin/security/cli/src/main/java/org/elasticsearch/xpack/security/cli/CertificateTool.java","filename":"x-pack/plugin/security/cli/src/main/java/org/elasticsearch/xpack/security/cli/CertificateTool.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":94,"end":94,"column":{"start":5,"end":77}},"sink":{"start":94,"end":94,"column":{"start":5,"end":77},"content":""},"parent_line_number":94,"fingerprint":"8bf348d1ed8afc55819f7b9ca1caa8c8_1","old_fingerprint":"8bf348d1ed8afc55819f7b9ca1caa8c8_54","code_extract":"    private static final String DEFAULT_CERT_ZIP = \"certificate-bundle.zip\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":426,"full_filename":"x-pack/plugin/security/cli/src/main/java/org/elasticsearch/xpack/security/cli/HttpCertificateCommand.java","filename":"x-pack/plugin/security/cli/src/main/java/org/elasticsearch/xpack/security/cli/HttpCertificateCommand.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":426,"end":426,"column":{"start":9,"end":58}},"sink":{"start":426,"end":426,"column":{"start":9,"end":58},"content":""},"parent_line_number":426,"fingerprint":"0fc61b76c4606f30d475bd4a49495012_0","old_fingerprint":"0fc61b76c4606f30d475bd4a49495012_104","code_extract":"        final String caCertName = \"elasticsearch-ca.pem\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":427,"full_filename":"x-pack/plugin/security/cli/src/main/java/org/elasticsearch/xpack/security/cli/HttpCertificateCommand.java","filename":"x-pack/plugin/security/cli/src/main/java/org/elasticsearch/xpack/security/cli/HttpCertificateCommand.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":427,"end":427,"column":{"start":9,"end":60}},"sink":{"start":427,"end":427,"column":{"start":9,"end":60},"content":""},"parent_line_number":427,"fingerprint":"0fc61b76c4606f30d475bd4a49495012_1","old_fingerprint":"0fc61b76c4606f30d475bd4a49495012_105","code_extract":"        final String caCert = ca == null ? \"\" : caCertName;"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":85,"full_filename":"x-pack/plugin/security/qa/jwt-realm/src/javaRestTest/java/org/elasticsearch/xpack/security/authc/jwt/JwtRestIT.java","filename":"x-pack/plugin/security/qa/jwt-realm/src/javaRestTest/java/org/elasticsearch/xpack/security/authc/jwt/JwtRestIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":85,"end":85,"column":{"start":5,"end":86}},"sink":{"start":85,"end":85,"column":{"start":5,"end":86},"content":""},"parent_line_number":85,"fingerprint":"4ee520744eff08117c62c4e79e19185e_0","old_fingerprint":"4ee520744eff08117c62c4e79e19185e_50","code_extract":"    public static final String HMAC_PASSPHRASE = \"test-HMAC/secret passphrase-value\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":528,"full_filename":"x-pack/plugin/security/qa/jwt-realm/src/javaRestTest/java/org/elasticsearch/xpack/security/authc/jwt/JwtRestIT.java","filename":"x-pack/plugin/security/qa/jwt-realm/src/javaRestTest/java/org/elasticsearch/xpack/security/authc/jwt/JwtRestIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":528,"end":528,"column":{"start":13,"end":68}},"sink":{"start":528,"end":528,"column":{"start":13,"end":68},"content":""},"parent_line_number":528,"fingerprint":"4ee520744eff08117c62c4e79e19185e_1","old_fingerprint":"4ee520744eff08117c62c4e79e19185e_114","code_extract":"            final String newValidSharedSecret = \"new-valid-secret\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":28,"full_filename":"x-pack/plugin/security/qa/smoke-test-all-realms/src/javaRestTest/java/org/elasticsearch/xpack/security/authc/JwtRealmAuthIT.java","filename":"x-pack/plugin/security/qa/smoke-test-all-realms/src/javaRestTest/java/org/elasticsearch/xpack/security/authc/JwtRealmAuthIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":28,"end":28,"column":{"start":5,"end":86}},"sink":{"start":28,"end":28,"column":{"start":5,"end":86},"content":""},"parent_line_number":28,"fingerprint":"cfedfa9d561f2a7142a86a3523db65b4_0","old_fingerprint":"cfedfa9d561f2a7142a86a3523db65b4_10","code_extract":"    private static final String HEADER_CLIENT_SECRET = \"client-shared-secret-string\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":91,"full_filename":"x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/security/authc/jwt/JwtRealmSingleNodeTests.java","filename":"x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/security/authc/jwt/JwtRealmSingleNodeTests.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":91,"end":91,"column":{"start":5,"end":75}},"sink":{"start":91,"end":91,"column":{"start":5,"end":75},"content":""},"parent_line_number":91,"fingerprint":"d1a2b77bc18b5de3be73db89438e9cf6_0","old_fingerprint":"d1a2b77bc18b5de3be73db89438e9cf6_52","code_extract":"    private final String jwtHmacKey = \"test-HMAC/secret passphrase-value\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":79,"full_filename":"x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/security/profile/SecurityDomainIntegTests.java","filename":"x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/security/profile/SecurityDomainIntegTests.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":79,"end":79,"column":{"start":5,"end":91}},"sink":{"start":79,"end":79,"column":{"start":5,"end":91},"content":""},"parent_line_number":79,"fingerprint":"56e02828420934ff198c6bb62694bd36_0","old_fingerprint":"56e02828420934ff198c6bb62694bd36_46","code_extract":"    private static final String HEADER_SECRET_JWT_REALM_1 = \"client-shared-secret-string\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":101,"full_filename":"x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/security/profile/SecurityDomainIntegTests.java","filename":"x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/security/profile/SecurityDomainIntegTests.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":101,"end":101,"column":{"start":5,"end":93}},"sink":{"start":101,"end":101,"column":{"start":5,"end":93},"content":""},"parent_line_number":101,"fingerprint":"56e02828420934ff198c6bb62694bd36_1","old_fingerprint":"56e02828420934ff198c6bb62694bd36_59","code_extract":"    private static final String HEADER_SECRET_JWT_REALM_2 = \"client-shared-secret-string-2\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":134,"full_filename":"x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/ssl/SslClientAuthenticationTests.java","filename":"x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/ssl/SslClientAuthenticationTests.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":134,"end":134,"column":{"start":13,"end":113}},"sink":{"start":134,"end":134,"column":{"start":13,"end":113},"content":""},"parent_line_number":134,"fingerprint":"8ad10549f19348dc63e7c5ac5dd17820_0","old_fingerprint":"8ad10549f19348dc63e7c5ac5dd17820_70","code_extract":"            String certPathName = \"/org/elasticsearch/xpack/security/transport/ssl/certs/simple/testclient.crt\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":135,"full_filename":"x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/ssl/SslClientAuthenticationTests.java","filename":"x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/ssl/SslClientAuthenticationTests.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":135,"end":135,"column":{"start":13,"end":111}},"sink":{"start":135,"end":135,"column":{"start":13,"end":111},"content":""},"parent_line_number":135,"fingerprint":"8ad10549f19348dc63e7c5ac5dd17820_1","old_fingerprint":"8ad10549f19348dc63e7c5ac5dd17820_71","code_extract":"            String nodeCertPath = \"/org/elasticsearch/xpack/security/transport/ssl/certs/simple/testnode.crt\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":136,"full_filename":"x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/ssl/SslClientAuthenticationTests.java","filename":"x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/ssl/SslClientAuthenticationTests.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":136,"end":136,"column":{"start":13,"end":116}},"sink":{"start":136,"end":136,"column":{"start":13,"end":116},"content":""},"parent_line_number":136,"fingerprint":"8ad10549f19348dc63e7c5ac5dd17820_2","old_fingerprint":"8ad10549f19348dc63e7c5ac5dd17820_72","code_extract":"            String nodeEcCertPath = \"/org/elasticsearch/xpack/security/transport/ssl/certs/simple/testnode_ec.crt\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":173,"full_filename":"x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/TokenService.java","filename":"x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/TokenService.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":173,"end":173,"column":{"start":5,"end":73}},"sink":{"start":173,"end":173,"column":{"start":5,"end":73},"content":""},"parent_line_number":173,"fingerprint":"d30bd64914c9c3b153af76db7da5acee_0","old_fingerprint":"d30bd64914c9c3b153af76db7da5acee_86","code_extract":"    private static final String ENCRYPTION_CIPHER = \"AES/GCM/NoPadding\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":24,"full_filename":"x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/tool/CommandUtils.java","filename":"x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/tool/CommandUtils.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":24,"end":24,"column":{"start":9,"end":124}},"sink":{"start":24,"end":24,"column":{"start":9,"end":124},"content":""},"parent_line_number":24,"fingerprint":"72199be1898f2de88549757d08ff88e8_0","old_fingerprint":"72199be1898f2de88549757d08ff88e8_4","code_extract":"        final char[] passwordChars = (\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789*-_=+\").toCharArray();"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":32,"full_filename":"x-pack/plugin/sql/qa/server/multi-cluster-with-security/src/javaRestTest/java/org/elasticsearch/xpack/sql/qa/multi_cluster_with_security/SqlTestClusterWithRemote.java","filename":"x-pack/plugin/sql/qa/server/multi-cluster-with-security/src/javaRestTest/java/org/elasticsearch/xpack/sql/qa/multi_cluster_with_security/SqlTestClusterWithRemote.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":32,"end":32,"column":{"start":5,"end":66}},"sink":{"start":32,"end":32,"column":{"start":5,"end":66},"content":""},"parent_line_number":32,"fingerprint":"0c547dccd8c177d17e9e1e2efe9cfb89_0","old_fingerprint":"0c547dccd8c177d17e9e1e2efe9cfb89_12","code_extract":"    public static final String PASSWORD = \"x-pack-test-password\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":132,"full_filename":"x-pack/plugin/sql/qa/server/src/main/java/org/elasticsearch/xpack/sql/qa/cli/EmbeddedCli.java","filename":"x-pack/plugin/sql/qa/server/src/main/java/org/elasticsearch/xpack/sql/qa/cli/EmbeddedCli.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":132,"end":132,"column":{"start":17,"end":66}},"sink":{"start":132,"end":132,"column":{"start":17,"end":66},"content":""},"parent_line_number":132,"fingerprint":"ea94771b6959513d29a033ad4030e729_0","old_fingerprint":"ea94771b6959513d29a033ad4030e729_69","code_extract":"                String passwordPrompt = \"[?1h=[?2004hpassword: \";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":240,"full_filename":"x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformIT.java","filename":"x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":240,"end":240,"column":{"start":9,"end":64}},"sink":{"start":240,"end":240,"column":{"start":9,"end":64},"content":""},"parent_line_number":240,"fingerprint":"b3d4dec5ca35ef3a1db3942f64af8131_0","old_fingerprint":"b3d4dec5ca35ef3a1db3942f64af8131_95","code_extract":"        String dest = \"reviews-by-user-business-day-to-update\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":325,"full_filename":"x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformIT.java","filename":"x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":325,"end":325,"column":{"start":9,"end":47}},"sink":{"start":325,"end":325,"column":{"start":9,"end":47},"content":""},"parent_line_number":325,"fingerprint":"b3d4dec5ca35ef3a1db3942f64af8131_1","old_fingerprint":"b3d4dec5ca35ef3a1db3942f64af8131_97","code_extract":"        String dest = \"retention-policy-dest\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":146,"full_filename":"x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformInsufficientPermissionsIT.java","filename":"x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformInsufficientPermissionsIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":146,"end":146,"column":{"start":9,"end":54}},"sink":{"start":146,"end":146,"column":{"start":9,"end":54},"content":""},"parent_line_number":146,"fingerprint":"0140ea6cd5c2ae291b73b4ef8549d0c5_0","old_fingerprint":"0140ea6cd5c2ae291b73b4ef8549d0c5_80","code_extract":"        String destIndexName = transformId + \"-dest\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":147,"full_filename":"x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformInsufficientPermissionsIT.java","filename":"x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformInsufficientPermissionsIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":147,"end":147,"column":{"start":9,"end":55}},"sink":{"start":147,"end":147,"column":{"start":9,"end":55},"content":""},"parent_line_number":147,"fingerprint":"0140ea6cd5c2ae291b73b4ef8549d0c5_1","old_fingerprint":"0140ea6cd5c2ae291b73b4ef8549d0c5_81","code_extract":"        String destAliasName = transformId + \"-alias\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":189,"full_filename":"x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformInsufficientPermissionsIT.java","filename":"x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformInsufficientPermissionsIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":189,"end":189,"column":{"start":9,"end":54}},"sink":{"start":189,"end":189,"column":{"start":9,"end":54},"content":""},"parent_line_number":189,"fingerprint":"0140ea6cd5c2ae291b73b4ef8549d0c5_2","old_fingerprint":"0140ea6cd5c2ae291b73b4ef8549d0c5_92","code_extract":"        String destIndexName = transformId + \"-dest\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":246,"full_filename":"x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformInsufficientPermissionsIT.java","filename":"x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformInsufficientPermissionsIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":246,"end":246,"column":{"start":9,"end":54}},"sink":{"start":246,"end":246,"column":{"start":9,"end":54},"content":""},"parent_line_number":246,"fingerprint":"0140ea6cd5c2ae291b73b4ef8549d0c5_3","old_fingerprint":"0140ea6cd5c2ae291b73b4ef8549d0c5_96","code_extract":"        String destIndexName = transformId + \"-dest\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":333,"full_filename":"x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformInsufficientPermissionsIT.java","filename":"x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformInsufficientPermissionsIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":333,"end":333,"column":{"start":9,"end":54}},"sink":{"start":333,"end":333,"column":{"start":9,"end":54},"content":""},"parent_line_number":333,"fingerprint":"0140ea6cd5c2ae291b73b4ef8549d0c5_4","old_fingerprint":"0140ea6cd5c2ae291b73b4ef8549d0c5_98","code_extract":"        String destIndexName = transformId + \"-dest\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":371,"full_filename":"x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformInsufficientPermissionsIT.java","filename":"x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformInsufficientPermissionsIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":371,"end":371,"column":{"start":9,"end":54}},"sink":{"start":371,"end":371,"column":{"start":9,"end":54},"content":""},"parent_line_number":371,"fingerprint":"0140ea6cd5c2ae291b73b4ef8549d0c5_5","old_fingerprint":"0140ea6cd5c2ae291b73b4ef8549d0c5_100","code_extract":"        String destIndexName = transformId + \"-dest\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":402,"full_filename":"x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformInsufficientPermissionsIT.java","filename":"x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformInsufficientPermissionsIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":402,"end":402,"column":{"start":9,"end":54}},"sink":{"start":402,"end":402,"column":{"start":9,"end":54},"content":""},"parent_line_number":402,"fingerprint":"0140ea6cd5c2ae291b73b4ef8549d0c5_6","old_fingerprint":"0140ea6cd5c2ae291b73b4ef8549d0c5_102","code_extract":"        String destIndexName = transformId + \"-dest\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":448,"full_filename":"x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformInsufficientPermissionsIT.java","filename":"x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformInsufficientPermissionsIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":448,"end":448,"column":{"start":9,"end":54}},"sink":{"start":448,"end":448,"column":{"start":9,"end":54},"content":""},"parent_line_number":448,"fingerprint":"0140ea6cd5c2ae291b73b4ef8549d0c5_7","old_fingerprint":"0140ea6cd5c2ae291b73b4ef8549d0c5_107","code_extract":"        String destIndexName = transformId + \"-dest\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":485,"full_filename":"x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformInsufficientPermissionsIT.java","filename":"x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformInsufficientPermissionsIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":485,"end":485,"column":{"start":9,"end":54}},"sink":{"start":485,"end":485,"column":{"start":9,"end":54},"content":""},"parent_line_number":485,"fingerprint":"0140ea6cd5c2ae291b73b4ef8549d0c5_8","old_fingerprint":"0140ea6cd5c2ae291b73b4ef8549d0c5_109","code_extract":"        String destIndexName = transformId + \"-dest\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":518,"full_filename":"x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformInsufficientPermissionsIT.java","filename":"x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformInsufficientPermissionsIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":518,"end":518,"column":{"start":9,"end":54}},"sink":{"start":518,"end":518,"column":{"start":9,"end":54},"content":""},"parent_line_number":518,"fingerprint":"0140ea6cd5c2ae291b73b4ef8549d0c5_9","old_fingerprint":"0140ea6cd5c2ae291b73b4ef8549d0c5_113","code_extract":"        String destIndexName = transformId + \"-dest\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":99,"full_filename":"x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformUsingSearchRuntimeFieldsIT.java","filename":"x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformUsingSearchRuntimeFieldsIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":99,"end":99,"column":{"start":9,"end":56}},"sink":{"start":99,"end":99,"column":{"start":9,"end":56},"content":""},"parent_line_number":99,"fingerprint":"1906b080135f559b24a532844a283762_0","old_fingerprint":"1906b080135f559b24a532844a283762_57","code_extract":"        String destIndexName = \"reviews-by-user-pivot\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":168,"full_filename":"x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformUsingSearchRuntimeFieldsIT.java","filename":"x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformUsingSearchRuntimeFieldsIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":168,"end":168,"column":{"start":9,"end":56}},"sink":{"start":168,"end":168,"column":{"start":9,"end":56},"content":""},"parent_line_number":168,"fingerprint":"1906b080135f559b24a532844a283762_1","old_fingerprint":"1906b080135f559b24a532844a283762_85","code_extract":"        String destIndexName = \"reviews-by-user-pivot\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":74,"full_filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformDeleteIT.java","filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformDeleteIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":74,"end":74,"column":{"start":9,"end":53}},"sink":{"start":74,"end":74,"column":{"start":9,"end":53},"content":""},"parent_line_number":74,"fingerprint":"ae685c23f0b13195f7a06e97d2a931d4_0","old_fingerprint":"ae685c23f0b13195f7a06e97d2a931d4_37","code_extract":"        String transformDest = transformId + \"_idx\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":75,"full_filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformDeleteIT.java","filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformDeleteIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":75,"end":75,"column":{"start":9,"end":60}},"sink":{"start":75,"end":75,"column":{"start":9,"end":60},"content":""},"parent_line_number":75,"fingerprint":"ae685c23f0b13195f7a06e97d2a931d4_1","old_fingerprint":"ae685c23f0b13195f7a06e97d2a931d4_39","code_extract":"        String transformDestAlias = transformId + \"_alias\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":96,"full_filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformDeleteIT.java","filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformDeleteIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":96,"end":96,"column":{"start":9,"end":53}},"sink":{"start":96,"end":96,"column":{"start":9,"end":53},"content":""},"parent_line_number":96,"fingerprint":"ae685c23f0b13195f7a06e97d2a931d4_2","old_fingerprint":"ae685c23f0b13195f7a06e97d2a931d4_55","code_extract":"        String transformDest = transformId + \"_idx\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":97,"full_filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformDeleteIT.java","filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformDeleteIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":97,"end":97,"column":{"start":9,"end":60}},"sink":{"start":97,"end":97,"column":{"start":9,"end":60},"content":""},"parent_line_number":97,"fingerprint":"ae685c23f0b13195f7a06e97d2a931d4_3","old_fingerprint":"ae685c23f0b13195f7a06e97d2a931d4_56","code_extract":"        String transformDestAlias = transformId + \"_alias\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":118,"full_filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformDeleteIT.java","filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformDeleteIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":118,"end":118,"column":{"start":9,"end":53}},"sink":{"start":118,"end":118,"column":{"start":9,"end":53},"content":""},"parent_line_number":118,"fingerprint":"ae685c23f0b13195f7a06e97d2a931d4_4","old_fingerprint":"ae685c23f0b13195f7a06e97d2a931d4_63","code_extract":"        String transformDest = transformId + \"_idx\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":119,"full_filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformDeleteIT.java","filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformDeleteIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":119,"end":119,"column":{"start":9,"end":60}},"sink":{"start":119,"end":119,"column":{"start":9,"end":60},"content":""},"parent_line_number":119,"fingerprint":"ae685c23f0b13195f7a06e97d2a931d4_5","old_fingerprint":"ae685c23f0b13195f7a06e97d2a931d4_64","code_extract":"        String transformDestAlias = transformId + \"_alias\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":144,"full_filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformDeleteIT.java","filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformDeleteIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":144,"end":144,"column":{"start":9,"end":53}},"sink":{"start":144,"end":144,"column":{"start":9,"end":53},"content":""},"parent_line_number":144,"fingerprint":"ae685c23f0b13195f7a06e97d2a931d4_6","old_fingerprint":"ae685c23f0b13195f7a06e97d2a931d4_77","code_extract":"        String transformDest = transformId + \"_idx\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":145,"full_filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformDeleteIT.java","filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformDeleteIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":145,"end":145,"column":{"start":9,"end":60}},"sink":{"start":145,"end":145,"column":{"start":9,"end":60},"content":""},"parent_line_number":145,"fingerprint":"ae685c23f0b13195f7a06e97d2a931d4_7","old_fingerprint":"ae685c23f0b13195f7a06e97d2a931d4_79","code_extract":"        String transformDestAlias = transformId + \"_alias\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":175,"full_filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformDeleteIT.java","filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformDeleteIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":175,"end":175,"column":{"start":9,"end":53}},"sink":{"start":175,"end":175,"column":{"start":9,"end":53},"content":""},"parent_line_number":175,"fingerprint":"ae685c23f0b13195f7a06e97d2a931d4_8","old_fingerprint":"ae685c23f0b13195f7a06e97d2a931d4_87","code_extract":"        String transformDest = transformId + \"_idx\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":176,"full_filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformDeleteIT.java","filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformDeleteIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":176,"end":176,"column":{"start":9,"end":60}},"sink":{"start":176,"end":176,"column":{"start":9,"end":60},"content":""},"parent_line_number":176,"fingerprint":"ae685c23f0b13195f7a06e97d2a931d4_9","old_fingerprint":"ae685c23f0b13195f7a06e97d2a931d4_89","code_extract":"        String transformDestAlias = transformId + \"_alias\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":128,"full_filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformDestIndexIT.java","filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformDestIndexIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":128,"end":128,"column":{"start":9,"end":50}},"sink":{"start":128,"end":128,"column":{"start":9,"end":50},"content":""},"parent_line_number":128,"fingerprint":"a37e8d13bef4bea5d81a521f6e5d49d3_0","old_fingerprint":"a37e8d13bef4bea5d81a521f6e5d49d3_65","code_extract":"        String destIndex = transformId + \"-dest\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":129,"full_filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformDestIndexIT.java","filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformDestIndexIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":129,"end":129,"column":{"start":9,"end":52}},"sink":{"start":129,"end":129,"column":{"start":9,"end":52},"content":""},"parent_line_number":129,"fingerprint":"a37e8d13bef4bea5d81a521f6e5d49d3_1","old_fingerprint":"a37e8d13bef4bea5d81a521f6e5d49d3_67","code_extract":"        String destAliasAll = transformId + \".all\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":130,"full_filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformDestIndexIT.java","filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformDestIndexIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":130,"end":130,"column":{"start":9,"end":58}},"sink":{"start":130,"end":130,"column":{"start":9,"end":58},"content":""},"parent_line_number":130,"fingerprint":"a37e8d13bef4bea5d81a521f6e5d49d3_2","old_fingerprint":"a37e8d13bef4bea5d81a521f6e5d49d3_68","code_extract":"        String destAliasLatest = transformId + \".latest\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":164,"full_filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformDestIndexIT.java","filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformDestIndexIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":164,"end":164,"column":{"start":9,"end":50}},"sink":{"start":164,"end":164,"column":{"start":9,"end":50},"content":""},"parent_line_number":164,"fingerprint":"a37e8d13bef4bea5d81a521f6e5d49d3_3","old_fingerprint":"a37e8d13bef4bea5d81a521f6e5d49d3_82","code_extract":"        String destIndex = transformId + \"-dest\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":165,"full_filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformDestIndexIT.java","filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformDestIndexIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":165,"end":165,"column":{"start":9,"end":52}},"sink":{"start":165,"end":165,"column":{"start":9,"end":52},"content":""},"parent_line_number":165,"fingerprint":"a37e8d13bef4bea5d81a521f6e5d49d3_4","old_fingerprint":"a37e8d13bef4bea5d81a521f6e5d49d3_83","code_extract":"        String destAliasAll = transformId + \".all\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":166,"full_filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformDestIndexIT.java","filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformDestIndexIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":166,"end":166,"column":{"start":9,"end":58}},"sink":{"start":166,"end":166,"column":{"start":9,"end":58},"content":""},"parent_line_number":166,"fingerprint":"a37e8d13bef4bea5d81a521f6e5d49d3_5","old_fingerprint":"a37e8d13bef4bea5d81a521f6e5d49d3_84","code_extract":"        String destAliasLatest = transformId + \".latest\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":465,"full_filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformGetAndGetStatsIT.java","filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformGetAndGetStatsIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":465,"end":465,"column":{"start":9,"end":53}},"sink":{"start":465,"end":465,"column":{"start":9,"end":53},"content":""},"parent_line_number":465,"fingerprint":"04b2b1529fc2b8e484811702e360b434_0","old_fingerprint":"04b2b1529fc2b8e484811702e360b434_108","code_extract":"        String transformDest = transformId + \"_idx\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":74,"full_filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformResetIT.java","filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformResetIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":74,"end":74,"column":{"start":9,"end":53}},"sink":{"start":74,"end":74,"column":{"start":9,"end":53},"content":""},"parent_line_number":74,"fingerprint":"16cca701b0a6e8c1ed9cacaa0500c720_0","old_fingerprint":"16cca701b0a6e8c1ed9cacaa0500c720_38","code_extract":"        String transformDest = transformId + \"_idx\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":110,"full_filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformResetIT.java","filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformResetIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":110,"end":110,"column":{"start":9,"end":53}},"sink":{"start":110,"end":110,"column":{"start":9,"end":53},"content":""},"parent_line_number":110,"fingerprint":"16cca701b0a6e8c1ed9cacaa0500c720_1","old_fingerprint":"16cca701b0a6e8c1ed9cacaa0500c720_62","code_extract":"        String transformDest = transformId + \"_idx\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":78,"full_filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformScheduleNowIT.java","filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformScheduleNowIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":78,"end":78,"column":{"start":9,"end":49}},"sink":{"start":78,"end":78,"column":{"start":9,"end":49},"content":""},"parent_line_number":78,"fingerprint":"8a23c34ba16fa808604766285e85a26e_0","old_fingerprint":"8a23c34ba16fa808604766285e85a26e_44","code_extract":"        String destIndex = transformId + \"_idx\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":107,"full_filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformUpdateIT.java","filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformUpdateIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":107,"end":107,"column":{"start":9,"end":53}},"sink":{"start":107,"end":107,"column":{"start":9,"end":53},"content":""},"parent_line_number":107,"fingerprint":"9ec18c0942fcb85311eff22459d0be0d_0","old_fingerprint":"9ec18c0942fcb85311eff22459d0be0d_61","code_extract":"        String transformDest = transformId + \"_idx\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":195,"full_filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformUpdateIT.java","filename":"x-pack/plugin/transform/qa/single-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/TransformUpdateIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":195,"end":195,"column":{"start":9,"end":50}},"sink":{"start":195,"end":195,"column":{"start":9,"end":50},"content":""},"parent_line_number":195,"fingerprint":"9ec18c0942fcb85311eff22459d0be0d_1","old_fingerprint":"9ec18c0942fcb85311eff22459d0be0d_93","code_extract":"        String destIndex = transformId + \"-dest\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":35,"full_filename":"x-pack/plugin/watcher/qa/rest/src/javaRestTest/java/org/elasticsearch/smoketest/SmokeTestWatcherTestSuiteIT.java","filename":"x-pack/plugin/watcher/qa/rest/src/javaRestTest/java/org/elasticsearch/smoketest/SmokeTestWatcherTestSuiteIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":35,"end":35,"column":{"start":5,"end":78}},"sink":{"start":35,"end":35,"column":{"start":5,"end":78},"content":""},"parent_line_number":35,"fingerprint":"0857e636f8067ba178d4f982b773f733_0","old_fingerprint":"0857e636f8067ba178d4f982b773f733_17","code_extract":"    private static final String TEST_ADMIN_PASSWORD = \"x-pack-test-password\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":35,"full_filename":"x-pack/plugin/watcher/qa/with-security/src/javaRestTest/java/org/elasticsearch/smoketest/SmokeTestWatcherWithSecurityIT.java","filename":"x-pack/plugin/watcher/qa/with-security/src/javaRestTest/java/org/elasticsearch/smoketest/SmokeTestWatcherWithSecurityIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":35,"end":35,"column":{"start":5,"end":78}},"sink":{"start":35,"end":35,"column":{"start":5,"end":78},"content":""},"parent_line_number":35,"fingerprint":"39fd730db48a5944649594883090bbd9_0","old_fingerprint":"39fd730db48a5944649594883090bbd9_16","code_extract":"    private static final String TEST_ADMIN_PASSWORD = \"x-pack-test-password\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":23,"full_filename":"x-pack/plugin/watcher/qa/with-security/src/yamlRestTest/java/org/elasticsearch/smoketest/SmokeTestWatcherWithSecurityClientYamlTestSuiteIT.java","filename":"x-pack/plugin/watcher/qa/with-security/src/yamlRestTest/java/org/elasticsearch/smoketest/SmokeTestWatcherWithSecurityClientYamlTestSuiteIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":23,"end":23,"column":{"start":5,"end":78}},"sink":{"start":23,"end":23,"column":{"start":5,"end":78},"content":""},"parent_line_number":23,"fingerprint":"5f8f1f64165f4bdd81e2377641c10995_0","old_fingerprint":"5f8f1f64165f4bdd81e2377641c10995_3","code_extract":"    private static final String TEST_ADMIN_PASSWORD = \"x-pack-test-password\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":56,"full_filename":"x-pack/qa/oidc-op-tests/src/javaRestTest/java/org/elasticsearch/xpack/security/authc/jwt/JwtWithOidcAuthIT.java","filename":"x-pack/qa/oidc-op-tests/src/javaRestTest/java/org/elasticsearch/xpack/security/authc/jwt/JwtWithOidcAuthIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":56,"end":56,"column":{"start":5,"end":75}},"sink":{"start":56,"end":56,"column":{"start":5,"end":75},"content":""},"parent_line_number":56,"fingerprint":"bbf7c5ac206ee7fb4b33e5bbd5733069_0","old_fingerprint":"bbf7c5ac206ee7fb4b33e5bbd5733069_31","code_extract":"    private static final String SHARED_SECRET = \"jwt-realm-shared-secret\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":76,"full_filename":"x-pack/qa/oidc-op-tests/src/javaRestTest/java/org/elasticsearch/xpack/security/authc/oidc/C2IdOpTestCase.java","filename":"x-pack/qa/oidc-op-tests/src/javaRestTest/java/org/elasticsearch/xpack/security/authc/oidc/C2IdOpTestCase.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":76,"end":76,"column":{"start":5,"end":116}},"sink":{"start":76,"end":76,"column":{"start":5,"end":116},"content":""},"parent_line_number":76,"fingerprint":"f8ffddf763e67c3d3d4524ba75b725dd_0","old_fingerprint":"f8ffddf763e67c3d3d4524ba75b725dd_40","code_extract":"    private static final String CLIENT_SECRET = \"b07efb7a1cf6ec9462afe7b6d3ab55c6c7880262aa61ac28dded292aca47c9a2\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":33,"full_filename":"x-pack/qa/reindex-tests-with-security/src/yamlRestTest/java/org/elasticsearch/xpack/security/ReindexWithSecurityClientYamlTestSuiteIT.java","filename":"x-pack/qa/reindex-tests-with-security/src/yamlRestTest/java/org/elasticsearch/xpack/security/ReindexWithSecurityClientYamlTestSuiteIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":33,"end":33,"column":{"start":5,"end":63}},"sink":{"start":33,"end":33,"column":{"start":5,"end":63},"content":""},"parent_line_number":33,"fingerprint":"77d924a14ef0f9c77747f51a9f92a33e_0","old_fingerprint":"77d924a14ef0f9c77747f51a9f92a33e_13","code_extract":"    private static final String PASS = \"x-pack-test-password\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":46,"full_filename":"x-pack/qa/reindex-tests-with-security/src/yamlRestTest/java/org/elasticsearch/xpack/security/ReindexWithSecurityIT.java","filename":"x-pack/qa/reindex-tests-with-security/src/yamlRestTest/java/org/elasticsearch/xpack/security/ReindexWithSecurityIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":46,"end":46,"column":{"start":5,"end":63}},"sink":{"start":46,"end":46,"column":{"start":5,"end":63},"content":""},"parent_line_number":46,"fingerprint":"0cf345d8f1f015586517379294740cb3_0","old_fingerprint":"0cf345d8f1f015586517379294740cb3_26","code_extract":"    private static final String PASS = \"x-pack-test-password\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":30,"full_filename":"x-pack/qa/smoke-test-plugins-ssl/src/yamlRestTest/java/org/elasticsearch/smoketest/SmokeTestPluginsSslClientYamlTestSuiteIT.java","filename":"x-pack/qa/smoke-test-plugins-ssl/src/yamlRestTest/java/org/elasticsearch/smoketest/SmokeTestPluginsSslClientYamlTestSuiteIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":30,"end":30,"column":{"start":5,"end":63}},"sink":{"start":30,"end":30,"column":{"start":5,"end":63},"content":""},"parent_line_number":30,"fingerprint":"f51d11446776b558a52421740e8e6236_0","old_fingerprint":"f51d11446776b558a52421740e8e6236_11","code_extract":"    private static final String PASS = \"x-pack-test-password\";"},{"cwe_ids":["798"],"id":"java_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nApplications should store secret values securely and not as literal values\nin the source code.\n\n## Remediations\n\n✅ Retrieve secrets from a secure location at runtime\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret","line_number":21,"full_filename":"x-pack/qa/smoke-test-plugins/src/yamlRestTest/java/org/elasticsearch/smoketest/XSmokeTestPluginsClientYamlTestSuiteIT.java","filename":"x-pack/qa/smoke-test-plugins/src/yamlRestTest/java/org/elasticsearch/smoketest/XSmokeTestPluginsClientYamlTestSuiteIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":21,"end":21,"column":{"start":5,"end":63}},"sink":{"start":21,"end":21,"column":{"start":5,"end":63},"content":""},"parent_line_number":21,"fingerprint":"b55119a8dd171df42c04dbdcdef031be_0","old_fingerprint":"b55119a8dd171df42c04dbdcdef031be_2","code_extract":"    private static final String PASS = \"x-pack-test-password\";"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nUsing the naive Socket class to create SSL sockets compromises security. Creating SSL sockets directly with `new Socket()` lacks the advanced security features provided by `SSLSocketFactory`. `SSLSocketFactory` is designed with SSL/TLS protocols in mind, offering encryption, hostname verification, and trust manager configuration. This makes it a more secure option for creating SSL sockets.\n\n## Remediations\n\n- **Do not** use `java.net.Socket` init to directly create SSL sockets, because of its limited security capabilities.\n- **Do** utilize `SSLSocketFactory` to create SSL sockets. This method ensures the use of SSL/TLS protocols and other security enhancements.\n  ```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n  ```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":64,"full_filename":"x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/security/transport/filter/IpFilteringIntegrationTests.java","filename":"x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/security/transport/filter/IpFilteringIntegrationTests.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":64,"end":64,"column":{"start":30,"end":42}},"sink":{"start":64,"end":64,"column":{"start":30,"end":42},"content":""},"parent_line_number":64,"fingerprint":"c76e4efd2a8b683faa9108ae6ef252e8_0","old_fingerprint":"c76e4efd2a8b683faa9108ae6ef252e8_0","code_extract":"        try (Socket socket = new Socket()) {"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nUsing the naive Socket class to create SSL sockets compromises security. Creating SSL sockets directly with `new Socket()` lacks the advanced security features provided by `SSLSocketFactory`. `SSLSocketFactory` is designed with SSL/TLS protocols in mind, offering encryption, hostname verification, and trust manager configuration. This makes it a more secure option for creating SSL sockets.\n\n## Remediations\n\n- **Do not** use `java.net.Socket` init to directly create SSL sockets, because of its limited security capabilities.\n- **Do** utilize `SSLSocketFactory` to create SSL sockets. This method ensures the use of SSL/TLS protocols and other security enhancements.\n  ```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n  ```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":71,"full_filename":"x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/security/transport/filter/IpFilteringIntegrationTests.java","filename":"x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/security/transport/filter/IpFilteringIntegrationTests.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":71,"end":71,"column":{"start":30,"end":42}},"sink":{"start":71,"end":71,"column":{"start":30,"end":42},"content":""},"parent_line_number":71,"fingerprint":"c76e4efd2a8b683faa9108ae6ef252e8_1","old_fingerprint":"c76e4efd2a8b683faa9108ae6ef252e8_1","code_extract":"        try (Socket socket = new Socket()) {"},{"cwe_ids":["89"],"id":"java_lang_sqli","title":"Unsanitized external input in SQL query","description":"## Description\n\nUsing unsanitized data, such as user input or request data, or externally influenced data passed to a function, in SQL query exposes your application to SQL injection attacks. This vulnerability arises when externally controlled data is directly included in SQL statements without proper sanitation, allowing attackers to manipulate queries and access or modify data.\n\n## Remediations\n\n- **Do not** include unsanitized input in SQL queries. This practice can lead to SQL injection vulnerabilities.\n  ```java\n  Statement stmt = conn.createStatement();\n  ResultSet rs = stmt.executeQuery(\"select name from users where id='\" + uri.getQueryParameter(\"user_id\") + \"'\"));\n  ```\n- **Do** use prepared statements for SQL queries to safely include external input.\n  ```java\n  PreparedStatement myStmt = myCon.prepareStatement(\"select * from students where age \u003e ? and name = ?\");\n  myStmt.setInt(1, uri.getQueryParameter(\"age\"));\n  myStmt.setString(2, uri.getQueryParameter(\"name\"));\n  ```\n\n## References\n\n- [OWASP SQL injection explained](https://owasp.org/www-community/attacks/SQL_Injection)\n- [OWASP SQL injection prevention cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_sqli","line_number":1310,"full_filename":"x-pack/plugin/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/JdbcDatabaseMetaData.java","filename":"x-pack/plugin/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/JdbcDatabaseMetaData.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":1310,"end":1310,"column":{"start":29,"end":70}},"sink":{"start":1310,"end":1310,"column":{"start":29,"end":70},"content":""},"parent_line_number":1310,"fingerprint":"60f12c0542f4d98038a2622cbe635b9a_0","old_fingerprint":"60f12c0542f4d98038a2622cbe635b9a_5","code_extract":"        try (ResultSet rs = con.createStatement().executeQuery(query)) {"},{"cwe_ids":["89"],"id":"java_lang_sqli","title":"Unsanitized external input in SQL query","description":"## Description\n\nUsing unsanitized data, such as user input or request data, or externally influenced data passed to a function, in SQL query exposes your application to SQL injection attacks. This vulnerability arises when externally controlled data is directly included in SQL statements without proper sanitation, allowing attackers to manipulate queries and access or modify data.\n\n## Remediations\n\n- **Do not** include unsanitized input in SQL queries. This practice can lead to SQL injection vulnerabilities.\n  ```java\n  Statement stmt = conn.createStatement();\n  ResultSet rs = stmt.executeQuery(\"select name from users where id='\" + uri.getQueryParameter(\"user_id\") + \"'\"));\n  ```\n- **Do** use prepared statements for SQL queries to safely include external input.\n  ```java\n  PreparedStatement myStmt = myCon.prepareStatement(\"select * from students where age \u003e ? and name = ?\");\n  myStmt.setInt(1, uri.getQueryParameter(\"age\"));\n  myStmt.setString(2, uri.getQueryParameter(\"name\"));\n  ```\n\n## References\n\n- [OWASP SQL injection explained](https://owasp.org/www-community/attacks/SQL_Injection)\n- [OWASP SQL injection prevention cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_sqli","line_number":56,"full_filename":"x-pack/plugin/sql/qa/jdbc/src/main/java/org/elasticsearch/xpack/sql/qa/jdbc/CloseCursorTestCase.java","filename":"x-pack/plugin/sql/qa/jdbc/src/main/java/org/elasticsearch/xpack/sql/qa/jdbc/CloseCursorTestCase.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":56,"end":56,"column":{"start":33,"end":62}},"sink":{"start":56,"end":56,"column":{"start":33,"end":62},"content":""},"parent_line_number":56,"fingerprint":"3dc17f5b81f50ae032eb982bb430b4b5_0","old_fingerprint":"3dc17f5b81f50ae032eb982bb430b4b5_1","code_extract":"            ResultSet results = statement.executeQuery(query);"},{"cwe_ids":["89"],"id":"java_lang_sqli","title":"Unsanitized external input in SQL query","description":"## Description\n\nUsing unsanitized data, such as user input or request data, or externally influenced data passed to a function, in SQL query exposes your application to SQL injection attacks. This vulnerability arises when externally controlled data is directly included in SQL statements without proper sanitation, allowing attackers to manipulate queries and access or modify data.\n\n## Remediations\n\n- **Do not** include unsanitized input in SQL queries. This practice can lead to SQL injection vulnerabilities.\n  ```java\n  Statement stmt = conn.createStatement();\n  ResultSet rs = stmt.executeQuery(\"select name from users where id='\" + uri.getQueryParameter(\"user_id\") + \"'\"));\n  ```\n- **Do** use prepared statements for SQL queries to safely include external input.\n  ```java\n  PreparedStatement myStmt = myCon.prepareStatement(\"select * from students where age \u003e ? and name = ?\");\n  myStmt.setInt(1, uri.getQueryParameter(\"age\"));\n  myStmt.setString(2, uri.getQueryParameter(\"name\"));\n  ```\n\n## References\n\n- [OWASP SQL injection explained](https://owasp.org/www-community/attacks/SQL_Injection)\n- [OWASP SQL injection prevention cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_sqli","line_number":94,"full_filename":"x-pack/plugin/sql/qa/jdbc/src/main/java/org/elasticsearch/xpack/sql/qa/jdbc/ResultSetMetaDataTestCase.java","filename":"x-pack/plugin/sql/qa/jdbc/src/main/java/org/elasticsearch/xpack/sql/qa/jdbc/ResultSetMetaDataTestCase.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":94,"end":94,"column":{"start":48,"end":82}},"sink":{"start":94,"end":94,"column":{"start":48,"end":82},"content":""},"parent_line_number":94,"fingerprint":"cdd66568a8e084901be5043753408599_0","old_fingerprint":"cdd66568a8e084901be5043753408599_2","code_extract":"            try (PreparedStatement statement = connection.prepareStatement(query)) {"},{"cwe_ids":["89"],"id":"java_lang_sqli","title":"Unsanitized external input in SQL query","description":"## Description\n\nUsing unsanitized data, such as user input or request data, or externally influenced data passed to a function, in SQL query exposes your application to SQL injection attacks. This vulnerability arises when externally controlled data is directly included in SQL statements without proper sanitation, allowing attackers to manipulate queries and access or modify data.\n\n## Remediations\n\n- **Do not** include unsanitized input in SQL queries. This practice can lead to SQL injection vulnerabilities.\n  ```java\n  Statement stmt = conn.createStatement();\n  ResultSet rs = stmt.executeQuery(\"select name from users where id='\" + uri.getQueryParameter(\"user_id\") + \"'\"));\n  ```\n- **Do** use prepared statements for SQL queries to safely include external input.\n  ```java\n  PreparedStatement myStmt = myCon.prepareStatement(\"select * from students where age \u003e ? and name = ?\");\n  myStmt.setInt(1, uri.getQueryParameter(\"age\"));\n  myStmt.setString(2, uri.getQueryParameter(\"name\"));\n  ```\n\n## References\n\n- [OWASP SQL injection explained](https://owasp.org/www-community/attacks/SQL_Injection)\n- [OWASP SQL injection prevention cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_sqli","line_number":2278,"full_filename":"x-pack/plugin/sql/qa/jdbc/src/main/java/org/elasticsearch/xpack/sql/qa/jdbc/ResultSetTestCase.java","filename":"x-pack/plugin/sql/qa/jdbc/src/main/java/org/elasticsearch/xpack/sql/qa/jdbc/ResultSetTestCase.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":2278,"end":2278,"column":{"start":48,"end":82}},"sink":{"start":2278,"end":2278,"column":{"start":48,"end":82},"content":""},"parent_line_number":2278,"fingerprint":"dc440fb98e4408ce4f9be2e19f97686d_0","old_fingerprint":"dc440fb98e4408ce4f9be2e19f97686d_6","code_extract":"            try (PreparedStatement statement = connection.prepareStatement(query)) {"},{"cwe_ids":["89"],"id":"java_lang_sqli","title":"Unsanitized external input in SQL query","description":"## Description\n\nUsing unsanitized data, such as user input or request data, or externally influenced data passed to a function, in SQL query exposes your application to SQL injection attacks. This vulnerability arises when externally controlled data is directly included in SQL statements without proper sanitation, allowing attackers to manipulate queries and access or modify data.\n\n## Remediations\n\n- **Do not** include unsanitized input in SQL queries. This practice can lead to SQL injection vulnerabilities.\n  ```java\n  Statement stmt = conn.createStatement();\n  ResultSet rs = stmt.executeQuery(\"select name from users where id='\" + uri.getQueryParameter(\"user_id\") + \"'\"));\n  ```\n- **Do** use prepared statements for SQL queries to safely include external input.\n  ```java\n  PreparedStatement myStmt = myCon.prepareStatement(\"select * from students where age \u003e ? and name = ?\");\n  myStmt.setInt(1, uri.getQueryParameter(\"age\"));\n  myStmt.setString(2, uri.getQueryParameter(\"name\"));\n  ```\n\n## References\n\n- [OWASP SQL injection explained](https://owasp.org/www-community/attacks/SQL_Injection)\n- [OWASP SQL injection prevention cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_sqli","line_number":2301,"full_filename":"x-pack/plugin/sql/qa/jdbc/src/main/java/org/elasticsearch/xpack/sql/qa/jdbc/ResultSetTestCase.java","filename":"x-pack/plugin/sql/qa/jdbc/src/main/java/org/elasticsearch/xpack/sql/qa/jdbc/ResultSetTestCase.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":2301,"end":2301,"column":{"start":48,"end":82}},"sink":{"start":2301,"end":2301,"column":{"start":48,"end":82},"content":""},"parent_line_number":2301,"fingerprint":"dc440fb98e4408ce4f9be2e19f97686d_1","old_fingerprint":"dc440fb98e4408ce4f9be2e19f97686d_7","code_extract":"            try (PreparedStatement statement = connection.prepareStatement(query)) {"},{"cwe_ids":["89"],"id":"java_lang_sqli","title":"Unsanitized external input in SQL query","description":"## Description\n\nUsing unsanitized data, such as user input or request data, or externally influenced data passed to a function, in SQL query exposes your application to SQL injection attacks. This vulnerability arises when externally controlled data is directly included in SQL statements without proper sanitation, allowing attackers to manipulate queries and access or modify data.\n\n## Remediations\n\n- **Do not** include unsanitized input in SQL queries. This practice can lead to SQL injection vulnerabilities.\n  ```java\n  Statement stmt = conn.createStatement();\n  ResultSet rs = stmt.executeQuery(\"select name from users where id='\" + uri.getQueryParameter(\"user_id\") + \"'\"));\n  ```\n- **Do** use prepared statements for SQL queries to safely include external input.\n  ```java\n  PreparedStatement myStmt = myCon.prepareStatement(\"select * from students where age \u003e ? and name = ?\");\n  myStmt.setInt(1, uri.getQueryParameter(\"age\"));\n  myStmt.setString(2, uri.getQueryParameter(\"name\"));\n  ```\n\n## References\n\n- [OWASP SQL injection explained](https://owasp.org/www-community/attacks/SQL_Injection)\n- [OWASP SQL injection prevention cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_sqli","line_number":50,"full_filename":"x-pack/plugin/sql/qa/server/src/main/java/org/elasticsearch/xpack/sql/qa/jdbc/CsvTestUtils.java","filename":"x-pack/plugin/sql/qa/server/src/main/java/org/elasticsearch/xpack/sql/qa/jdbc/CsvTestUtils.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":50,"end":51,"column":{"start":30,"end":59}},"sink":{"start":50,"end":51,"column":{"start":30,"end":59},"content":""},"parent_line_number":50,"fingerprint":"f59b8742d1da68a92621599c468fbea9_0","old_fingerprint":"f59b8742d1da68a92621599c468fbea9_0","code_extract":"        ResultSet expected = csv.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY)\n            .executeQuery(\"SELECT * FROM \" + csvTableName);"},{"cwe_ids":["89"],"id":"java_lang_sqli","title":"Unsanitized external input in SQL query","description":"## Description\n\nUsing unsanitized data, such as user input or request data, or externally influenced data passed to a function, in SQL query exposes your application to SQL injection attacks. This vulnerability arises when externally controlled data is directly included in SQL statements without proper sanitation, allowing attackers to manipulate queries and access or modify data.\n\n## Remediations\n\n- **Do not** include unsanitized input in SQL queries. This practice can lead to SQL injection vulnerabilities.\n  ```java\n  Statement stmt = conn.createStatement();\n  ResultSet rs = stmt.executeQuery(\"select name from users where id='\" + uri.getQueryParameter(\"user_id\") + \"'\"));\n  ```\n- **Do** use prepared statements for SQL queries to safely include external input.\n  ```java\n  PreparedStatement myStmt = myCon.prepareStatement(\"select * from students where age \u003e ? and name = ?\");\n  myStmt.setInt(1, uri.getQueryParameter(\"age\"));\n  myStmt.setString(2, uri.getQueryParameter(\"name\"));\n  ```\n\n## References\n\n- [OWASP SQL injection explained](https://owasp.org/www-community/attacks/SQL_Injection)\n- [OWASP SQL injection prevention cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_sqli","line_number":108,"full_filename":"x-pack/plugin/sql/qa/server/src/main/java/org/elasticsearch/xpack/sql/qa/jdbc/SpecBaseIntegrationTestCase.java","filename":"x-pack/plugin/sql/qa/server/src/main/java/org/elasticsearch/xpack/sql/qa/jdbc/SpecBaseIntegrationTestCase.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":108,"end":108,"column":{"start":16,"end":45}},"sink":{"start":108,"end":108,"column":{"start":16,"end":45},"content":""},"parent_line_number":108,"fingerprint":"95827802f5a641a6865a60d0d8a1b2fc_0","old_fingerprint":"95827802f5a641a6865a60d0d8a1b2fc_3","code_extract":"        return statement.executeQuery(query);"},{"cwe_ids":["89"],"id":"java_lang_sqli","title":"Unsanitized external input in SQL query","description":"## Description\n\nUsing unsanitized data, such as user input or request data, or externally influenced data passed to a function, in SQL query exposes your application to SQL injection attacks. This vulnerability arises when externally controlled data is directly included in SQL statements without proper sanitation, allowing attackers to manipulate queries and access or modify data.\n\n## Remediations\n\n- **Do not** include unsanitized input in SQL queries. This practice can lead to SQL injection vulnerabilities.\n  ```java\n  Statement stmt = conn.createStatement();\n  ResultSet rs = stmt.executeQuery(\"select name from users where id='\" + uri.getQueryParameter(\"user_id\") + \"'\"));\n  ```\n- **Do** use prepared statements for SQL queries to safely include external input.\n  ```java\n  PreparedStatement myStmt = myCon.prepareStatement(\"select * from students where age \u003e ? and name = ?\");\n  myStmt.setInt(1, uri.getQueryParameter(\"age\"));\n  myStmt.setString(2, uri.getQueryParameter(\"name\"));\n  ```\n\n## References\n\n- [OWASP SQL injection explained](https://owasp.org/www-community/attacks/SQL_Injection)\n- [OWASP SQL injection prevention cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_sqli","line_number":429,"full_filename":"x-pack/plugin/sql/qa/server/src/main/java/org/elasticsearch/xpack/sql/qa/jdbc/SysColumnsTestCase.java","filename":"x-pack/plugin/sql/qa/server/src/main/java/org/elasticsearch/xpack/sql/qa/jdbc/SysColumnsTestCase.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":429,"end":429,"column":{"start":48,"end":82}},"sink":{"start":429,"end":429,"column":{"start":48,"end":82},"content":""},"parent_line_number":429,"fingerprint":"84371331df17965780ae9c84fef35548_0","old_fingerprint":"84371331df17965780ae9c84fef35548_4","code_extract":"            try (PreparedStatement statement = connection.prepareStatement(query)) {"},{"cwe_ids":["78"],"id":"python_lang_os_command_injection","title":"Unsanitized user input in OS command","description":"## Description\n\nDirectly incorporating external or user-defined input into an OS command exposes the system to possible command injection attacks. This vulnerability allows attackers to execute unauthorized commands on the operating system, potentially leading to a compromise of system integrity.\n\n## Remediations\n\n- **Do not** use OS commands that include dynamic input directly. Instead, explore safer alternatives such as libraries or built-in functions that achieve the same goal without executing system commands. \n- **Do** use hardcoded values for any input that is incorporated into OS commands. This approach minimizes the risk by ensuring only predefined inputs are used, thus preventing attackers from injecting malicious commands. Use safe lists or dictionaries if you need to be dynamic. \n\n## References\n\n- [OWASP command injection explained](https://owasp.org/www-community/attacks/Command_Injection)","documentation_url":"https://docs.bearer.com/reference/rules/python_lang_os_command_injection","line_number":27,"full_filename":"dev-tools/prepare_release_update_documentation.py","filename":"dev-tools/prepare_release_update_documentation.py","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":27,"end":27,"column":{"start":6,"end":33}},"sink":{"start":27,"end":27,"column":{"start":6,"end":33},"content":""},"parent_line_number":27,"fingerprint":"9278e82f66a665d8bbe5357ab22def2d_0","old_fingerprint":"9278e82f66a665d8bbe5357ab22def2d_0","code_extract":"  if os.system('%s' % (command)):"},{"cwe_ids":["78"],"id":"python_lang_os_command_injection","title":"Unsanitized user input in OS command","description":"## Description\n\nDirectly incorporating external or user-defined input into an OS command exposes the system to possible command injection attacks. This vulnerability allows attackers to execute unauthorized commands on the operating system, potentially leading to a compromise of system integrity.\n\n## Remediations\n\n- **Do not** use OS commands that include dynamic input directly. Instead, explore safer alternatives such as libraries or built-in functions that achieve the same goal without executing system commands. \n- **Do** use hardcoded values for any input that is incorporated into OS commands. This approach minimizes the risk by ensuring only predefined inputs are used, thus preventing attackers from injecting malicious commands. Use safe lists or dictionaries if you need to be dynamic. \n\n## References\n\n- [OWASP command injection explained](https://owasp.org/www-community/attacks/Command_Injection)","documentation_url":"https://docs.bearer.com/reference/rules/python_lang_os_command_injection","line_number":73,"full_filename":"x-pack/plugin/sql/connectors/tableau/tdvt/tdvt_run.py","filename":"x-pack/plugin/sql/connectors/tableau/tdvt/tdvt_run.py","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":73,"end":74,"column":{"start":10,"end":37}},"sink":{"start":73,"end":74,"column":{"start":10,"end":37},"content":""},"parent_line_number":73,"fingerprint":"14a907e2fc25eb2d160437896abe7362_0","old_fingerprint":"14a907e2fc25eb2d160437896abe7362_1","code_extract":"    with subprocess.Popen(args, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE,\n            universal_newlines=True) as proc:"}],"high":[{"cwe_ids":["327"],"id":"java_lang_padding_oracle_encryption_vulnerability","title":"Usage of CBC (Cipher Block Chaining) mode with padding","description":"## Description\n\nUsing a block cipher algorithm mode, such as CBC (Cipher Block Chaining), together with a padding scheme is vulnerable to Padding Oracle attacks. This vulnerability arises because attackers can exploit the padding scheme to decrypt messages.\n\n## Remediations\n\n- **Do not** use CBC mode with padding for encryption. This combination is susceptible to security breaches.\n  ```java\n  Cipher c = Cipher.getInstance(\"AES/CBC/PKCS5Padding\"); // unsafe\n  ```\n- **Do** opt for GCM (Galois/Counter Mode) when implementing encryption. GCM is a more secure alternative that mitigates the risks associated with CBC mode.\n  ```java\n  Cipher c = Cipher.getInstance(\"AES/GCM/PKCS5Padding\");\n  ```\n\n## References\n\n- [Java Cipher class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/javax/crypto/Cipher.html)\n- [Java Security Standard Algorithm Names](https://docs.oracle.com/en/java/javase/20/docs/specs/security/standard-names.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_padding_oracle_encryption_vulnerability","line_number":535,"full_filename":"libs/ssl-config/src/main/java/org/elasticsearch/common/ssl/PemUtils.java","filename":"libs/ssl-config/src/main/java/org/elasticsearch/common/ssl/PemUtils.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":535,"end":535,"column":{"start":25,"end":59}},"sink":{"start":535,"end":535,"column":{"start":25,"end":59},"content":""},"parent_line_number":535,"fingerprint":"a4cb4b639ae6f26d3152509012875e40_0","old_fingerprint":"a4cb4b639ae6f26d3152509012875e40_0","code_extract":"        Cipher cipher = Cipher.getInstance(transformation);"},{"cwe_ids":["295"],"id":"java_lang_ssl_hostname_verifier","title":"Missing or permissive SSL hostname verifier","description":"## Description\n\nIt is best security practice to always verify the hostname when establishing a SSL/TLS connection. Failure to do so exposes your application to Man-in-the-Middle attacks. This vulnerability arises when the application fails to confirm that the server's hostname matches the hostname in the server's SSL certificate.\n\n## Remediations\n\n- **Do not** use `ALLOW_ALL_HOSTNAME_VERIFIER` or any similarly permissive hostname verifiers. These verifiers do not properly check if the server's hostname matches the SSL certificate, undermining the security of your connection.\n  ```java\n  HostnameVerifier hostnameVerifier = org.apache.http.conn.ssl.SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER;\n  HttpsURLConnection.setDefaultHostnameVerifier(hostnameVerifier); // unsafe\n  ```","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_ssl_hostname_verifier","line_number":169,"full_filename":"build-tools/src/main/java/org/elasticsearch/gradle/testclusters/SslTrustResolver.java","filename":"build-tools/src/main/java/org/elasticsearch/gradle/testclusters/SslTrustResolver.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":169,"end":169,"column":{"start":20,"end":37}},"sink":{"start":169,"end":169,"column":{"start":20,"end":37},"content":""},"parent_line_number":169,"fingerprint":"4bae59bc55bc54d3e2daf09a259cb8eb_0","old_fingerprint":"4bae59bc55bc54d3e2daf09a259cb8eb_4","code_extract":"            public X509Certificate[] getAcceptedIssuers() {"},{"cwe_ids":["295"],"id":"java_lang_ssl_hostname_verifier","title":"Missing or permissive SSL hostname verifier","description":"## Description\n\nIt is best security practice to always verify the hostname when establishing a SSL/TLS connection. Failure to do so exposes your application to Man-in-the-Middle attacks. This vulnerability arises when the application fails to confirm that the server's hostname matches the hostname in the server's SSL certificate.\n\n## Remediations\n\n- **Do not** use `ALLOW_ALL_HOSTNAME_VERIFIER` or any similarly permissive hostname verifiers. These verifiers do not properly check if the server's hostname matches the SSL certificate, undermining the security of your connection.\n  ```java\n  HostnameVerifier hostnameVerifier = org.apache.http.conn.ssl.SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER;\n  HttpsURLConnection.setDefaultHostnameVerifier(hostnameVerifier); // unsafe\n  ```","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_ssl_hostname_verifier","line_number":154,"full_filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/CommandLineHttpClient.java","filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/CommandLineHttpClient.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":154,"end":154,"column":{"start":21,"end":129}},"sink":{"start":154,"end":154,"column":{"start":21,"end":129},"content":""},"parent_line_number":154,"fingerprint":"c2b8509a8db34ff8e70ecdc2f664cf42_0","old_fingerprint":"c2b8509a8db34ff8e70ecdc2f664cf42_3","code_extract":"                    sslContext.init(null, new TrustManager[] { fingerprintTrustingTrustManager(pinnedCaCertFingerprint) }, null);"},{"cwe_ids":["295"],"id":"java_lang_ssl_hostname_verifier","title":"Missing or permissive SSL hostname verifier","description":"## Description\n\nIt is best security practice to always verify the hostname when establishing a SSL/TLS connection. Failure to do so exposes your application to Man-in-the-Middle attacks. This vulnerability arises when the application fails to confirm that the server's hostname matches the hostname in the server's SSL certificate.\n\n## Remediations\n\n- **Do not** use `ALLOW_ALL_HOSTNAME_VERIFIER` or any similarly permissive hostname verifiers. These verifiers do not properly check if the server's hostname matches the SSL certificate, undermining the security of your connection.\n  ```java\n  HostnameVerifier hostnameVerifier = org.apache.http.conn.ssl.SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER;\n  HttpsURLConnection.setDefaultHostnameVerifier(hostnameVerifier); // unsafe\n  ```","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_ssl_hostname_verifier","line_number":363,"full_filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/CommandLineHttpClient.java","filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/CommandLineHttpClient.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":363,"end":363,"column":{"start":20,"end":37}},"sink":{"start":363,"end":363,"column":{"start":20,"end":37},"content":""},"parent_line_number":363,"fingerprint":"c2b8509a8db34ff8e70ecdc2f664cf42_1","old_fingerprint":"c2b8509a8db34ff8e70ecdc2f664cf42_5","code_extract":"            public X509Certificate[] getAcceptedIssuers() {"},{"cwe_ids":["295"],"id":"java_lang_ssl_hostname_verifier","title":"Missing or permissive SSL hostname verifier","description":"## Description\n\nIt is best security practice to always verify the hostname when establishing a SSL/TLS connection. Failure to do so exposes your application to Man-in-the-Middle attacks. This vulnerability arises when the application fails to confirm that the server's hostname matches the hostname in the server's SSL certificate.\n\n## Remediations\n\n- **Do not** use `ALLOW_ALL_HOSTNAME_VERIFIER` or any similarly permissive hostname verifiers. These verifiers do not properly check if the server's hostname matches the SSL certificate, undermining the security of your connection.\n  ```java\n  HostnameVerifier hostnameVerifier = org.apache.http.conn.ssl.SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER;\n  HttpsURLConnection.setDefaultHostnameVerifier(hostnameVerifier); // unsafe\n  ```","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_ssl_hostname_verifier","line_number":127,"full_filename":"x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/security/authc/pki/PkiOptionalClientAuthTests.java","filename":"x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/security/authc/pki/PkiOptionalClientAuthTests.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":127,"end":127,"column":{"start":9,"end":70}},"sink":{"start":127,"end":127,"column":{"start":9,"end":70},"content":""},"parent_line_number":127,"fingerprint":"09677fd8cea7e6f09edbedd19ad55cca_0","old_fingerprint":"09677fd8cea7e6f09edbedd19ad55cca_2","code_extract":"        sc.init(null, factory.getTrustManagers(), new SecureRandom());"},{"cwe_ids":["295"],"id":"java_lang_ssl_hostname_verifier","title":"Missing or permissive SSL hostname verifier","description":"## Description\n\nIt is best security practice to always verify the hostname when establishing a SSL/TLS connection. Failure to do so exposes your application to Man-in-the-Middle attacks. This vulnerability arises when the application fails to confirm that the server's hostname matches the hostname in the server's SSL certificate.\n\n## Remediations\n\n- **Do not** use `ALLOW_ALL_HOSTNAME_VERIFIER` or any similarly permissive hostname verifiers. These verifiers do not properly check if the server's hostname matches the SSL certificate, undermining the security of your connection.\n  ```java\n  HostnameVerifier hostnameVerifier = org.apache.http.conn.ssl.SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER;\n  HttpsURLConnection.setDefaultHostnameVerifier(hostnameVerifier); // unsafe\n  ```","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_ssl_hostname_verifier","line_number":108,"full_filename":"x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/security/transport/ssl/EllipticCurveSSLTests.java","filename":"x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/security/transport/ssl/EllipticCurveSSLTests.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":108,"end":108,"column":{"start":9,"end":42}},"sink":{"start":108,"end":108,"column":{"start":9,"end":42},"content":""},"parent_line_number":108,"fingerprint":"a40e8e7684dd9d9929222f1a6db9409e_0","old_fingerprint":"a40e8e7684dd9d9929222f1a6db9409e_0","code_extract":"        sslContext.init(null, null, null);"},{"cwe_ids":["295"],"id":"java_lang_ssl_hostname_verifier","title":"Missing or permissive SSL hostname verifier","description":"## Description\n\nIt is best security practice to always verify the hostname when establishing a SSL/TLS connection. Failure to do so exposes your application to Man-in-the-Middle attacks. This vulnerability arises when the application fails to confirm that the server's hostname matches the hostname in the server's SSL certificate.\n\n## Remediations\n\n- **Do not** use `ALLOW_ALL_HOSTNAME_VERIFIER` or any similarly permissive hostname verifiers. These verifiers do not properly check if the server's hostname matches the SSL certificate, undermining the security of your connection.\n  ```java\n  HostnameVerifier hostnameVerifier = org.apache.http.conn.ssl.SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER;\n  HttpsURLConnection.setDefaultHostnameVerifier(hostnameVerifier); // unsafe\n  ```","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_ssl_hostname_verifier","line_number":108,"full_filename":"x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/security/transport/ssl/SslIntegrationTests.java","filename":"x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/security/transport/ssl/SslIntegrationTests.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":108,"end":108,"column":{"start":9,"end":78}},"sink":{"start":108,"end":108,"column":{"start":9,"end":78},"content":""},"parent_line_number":108,"fingerprint":"643d05cfd8f23e0f9e9272ae2879dfc8_0","old_fingerprint":"643d05cfd8f23e0f9e9272ae2879dfc8_1","code_extract":"        sslContext.init(null, factory.getTrustManagers(), new SecureRandom());"},{"cwe_ids":["295"],"id":"java_lang_ssl_verification","title":"Missing TLS validation","description":"## Description\n\nYour code is vulnerable to Man-in-the-Middle attacks if it doesn't validate TLS certificates. This issue arises when your application establishes a connection without verifying the server's hostname, making it susceptible to data interception and other security risks.  Using deprecated elements like `DefaultHttpClient`, which lacks hostname verification, or the SSL protocol, known for its security flaws, exacerbates these vulnerabilities.\n\n## Remediations\n\n- **Do** use newer HTTP Clients such as `java.net.http.HttpClient` that automatically include TLS validation.\n- **Do** opt for the newer TLS protocol over SSL, wherever possible, to secure connections. Ensure your application explicitly requests TLS to avoid the vulnerabilities associated with SSL.\n  ```java\n  SSLContext.getInstance(\"TLS\");\n  ```\n- **Do not** rely on deprecated HTTP clients, such as `DefaultHttpClient`, for your application's networking needs. These clients do not perform necessary security checks like TLS validation, putting your application at risk.","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_ssl_verification","line_number":104,"full_filename":"x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/security/transport/ssl/SslIntegrationTests.java","filename":"x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/security/transport/ssl/SslIntegrationTests.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":104,"end":104,"column":{"start":33,"end":62}},"sink":{"start":104,"end":104,"column":{"start":33,"end":62},"content":""},"parent_line_number":104,"fingerprint":"2a723394824a2660d99c0ded1ed6b1c9_0","old_fingerprint":"2a723394824a2660d99c0ded1ed6b1c9_0","code_extract":"        SSLContext sslContext = SSLContext.getInstance(\"SSL\");"},{"cwe_ids":["22"],"id":"python_lang_path_traversal","title":"Unsanitized dynamic input in file path","description":"## Description\n\nUsing unsanitized dynamic input to determine file paths can allow attackers to gain access to files and folders outside of the intended scope. This vulnerability occurs when input provided by users is directly used to access the filesystem without proper validation or sanitization.\n\n## Remediations\n\n- **Do not** directly use external input to construct file paths. This can lead to unauthorized file access.\n- **Do** use a safelist to define accessible paths or directories. Only allow user input to influence file paths within these predefined, safe boundaries.\n- **Do** use absolute path checks to confirm that the constructed path is within the expected directory\n    ```python\n    BASE_DIRECTORY = '/path/to/safe/directory'\n    my_path = os.path.abspath(os.path.join(BASE_DIRECTORY, dynamic_input))\n\n    if my_path.startswith(BASE_DIRECTORY):\n      open(my_path)\n   ```\n\n## References\n\n- [OWASP Path Traversal](https://owasp.org/www-community/attacks/Path_Traversal)\n","documentation_url":"https://docs.bearer.com/reference/rules/python_lang_path_traversal","line_number":57,"full_filename":"dev-tools/prepare_release_update_documentation.py","filename":"dev-tools/prepare_release_update_documentation.py","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":57,"end":57,"column":{"start":10,"end":43}},"sink":{"start":57,"end":57,"column":{"start":10,"end":43},"content":""},"parent_line_number":57,"fingerprint":"94cbebb33f037be2f414bb403bc86238_0","old_fingerprint":"94cbebb33f037be2f414bb403bc86238_0","code_extract":"    with open(file_path, encoding='utf-8') as old_file:"},{"cwe_ids":["22"],"id":"python_lang_path_traversal","title":"Unsanitized dynamic input in file path","description":"## Description\n\nUsing unsanitized dynamic input to determine file paths can allow attackers to gain access to files and folders outside of the intended scope. This vulnerability occurs when input provided by users is directly used to access the filesystem without proper validation or sanitization.\n\n## Remediations\n\n- **Do not** directly use external input to construct file paths. This can lead to unauthorized file access.\n- **Do** use a safelist to define accessible paths or directories. Only allow user input to influence file paths within these predefined, safe boundaries.\n- **Do** use absolute path checks to confirm that the constructed path is within the expected directory\n    ```python\n    BASE_DIRECTORY = '/path/to/safe/directory'\n    my_path = os.path.abspath(os.path.join(BASE_DIRECTORY, dynamic_input))\n\n    if my_path.startswith(BASE_DIRECTORY):\n      open(my_path)\n   ```\n\n## References\n\n- [OWASP Path Traversal](https://owasp.org/www-community/attacks/Path_Traversal)\n","documentation_url":"https://docs.bearer.com/reference/rules/python_lang_path_traversal","line_number":65,"full_filename":"dev-tools/prepare_release_update_documentation.py","filename":"dev-tools/prepare_release_update_documentation.py","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":65,"end":65,"column":{"start":5,"end":25}},"sink":{"start":65,"end":65,"column":{"start":5,"end":25},"content":""},"parent_line_number":65,"fingerprint":"94cbebb33f037be2f414bb403bc86238_1","old_fingerprint":"94cbebb33f037be2f414bb403bc86238_1","code_extract":"    os.remove(file_path)"},{"cwe_ids":["22"],"id":"python_lang_path_traversal","title":"Unsanitized dynamic input in file path","description":"## Description\n\nUsing unsanitized dynamic input to determine file paths can allow attackers to gain access to files and folders outside of the intended scope. This vulnerability occurs when input provided by users is directly used to access the filesystem without proper validation or sanitization.\n\n## Remediations\n\n- **Do not** directly use external input to construct file paths. This can lead to unauthorized file access.\n- **Do** use a safelist to define accessible paths or directories. Only allow user input to influence file paths within these predefined, safe boundaries.\n- **Do** use absolute path checks to confirm that the constructed path is within the expected directory\n    ```python\n    BASE_DIRECTORY = '/path/to/safe/directory'\n    my_path = os.path.abspath(os.path.join(BASE_DIRECTORY, dynamic_input))\n\n    if my_path.startswith(BASE_DIRECTORY):\n      open(my_path)\n   ```\n\n## References\n\n- [OWASP Path Traversal](https://owasp.org/www-community/attacks/Path_Traversal)\n","documentation_url":"https://docs.bearer.com/reference/rules/python_lang_path_traversal","line_number":122,"full_filename":"x-pack/plugin/sql/connectors/tableau/tdvt/tdvt_run.py","filename":"x-pack/plugin/sql/connectors/tableau/tdvt/tdvt_run.py","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":122,"end":122,"column":{"start":18,"end":59}},"sink":{"start":122,"end":122,"column":{"start":18,"end":59},"content":""},"parent_line_number":122,"fingerprint":"2f8d06503476391a35e02407000ff510_0","old_fingerprint":"2f8d06503476391a35e02407000ff510_2","code_extract":"            with open(os.path.join(tds_src_dir, filename)) as src:"}],"medium":[{"cwe_ids":["210"],"id":"java_lang_exception","title":"Leakage of sensitive data in exception message","description":"## Description\n\nLeakage of sensitive data in exception messages can lead to data breaches. This vulnerability occurs when sensitive information is included in exceptions, making it accessible to unauthorized users.\n\n## Remediations\n\n- **Do not** include sensitive data in exception messages. This can inadvertently expose private information.\n  ```java\n  throw new Exception(\"error for \" + user.email);\n  ```\n- **Do** use non-sensitive, unique identifiers in exception messages to avoid revealing personal identifiable information (PII).\n  ```java\n  throw new Exception(\"error for \" + user.id);\n  ```","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_exception","line_number":439,"full_filename":"x-pack/plugin/watcher/src/main/java/org/elasticsearch/xpack/watcher/notification/slack/message/Attachment.java","filename":"x-pack/plugin/watcher/src/main/java/org/elasticsearch/xpack/watcher/notification/slack/message/Attachment.java","data_type":{"category_uuid":"14124881-6b92-4fc5-8005-ea7c1c09592e","name":"Fullname"},"category_groups":["PII","Personal Data"],"source":{"start":442,"end":442,"column":{"start":29,"end":47}},"sink":{"start":439,"end":443,"column":{"start":25,"end":27},"content":""},"parent_line_number":439,"fingerprint":"238c1ffc95c0fbd6ecd94aea233777c1_0","old_fingerprint":"238c1ffc95c0fbd6ecd94aea233777c1_0","code_extract":"                        throw new ElasticsearchParseException(\n                            \"could not parse message attachment. failed to parse [{}] field\",\n                            pe,\n                            XField.AUTHOR_NAME\n                        );"},{"cwe_ids":["210"],"id":"java_lang_exception","title":"Leakage of sensitive data in exception message","description":"## Description\n\nLeakage of sensitive data in exception messages can lead to data breaches. This vulnerability occurs when sensitive information is included in exceptions, making it accessible to unauthorized users.\n\n## Remediations\n\n- **Do not** include sensitive data in exception messages. This can inadvertently expose private information.\n  ```java\n  throw new Exception(\"error for \" + user.email);\n  ```\n- **Do** use non-sensitive, unique identifiers in exception messages to avoid revealing personal identifiable information (PII).\n  ```java\n  throw new Exception(\"error for \" + user.id);\n  ```","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_exception","line_number":580,"full_filename":"x-pack/plugin/watcher/src/main/java/org/elasticsearch/xpack/watcher/notification/slack/message/Attachment.java","filename":"x-pack/plugin/watcher/src/main/java/org/elasticsearch/xpack/watcher/notification/slack/message/Attachment.java","data_type":{"category_uuid":"14124881-6b92-4fc5-8005-ea7c1c09592e","name":"Fullname"},"category_groups":["PII","Personal Data"],"source":{"start":583,"end":583,"column":{"start":25,"end":43}},"sink":{"start":580,"end":584,"column":{"start":21,"end":23},"content":""},"parent_line_number":580,"fingerprint":"238c1ffc95c0fbd6ecd94aea233777c1_1","old_fingerprint":"238c1ffc95c0fbd6ecd94aea233777c1_1","code_extract":"                    throw new ElasticsearchParseException(\n                        \"could not parse message attachment field. found field [{}], but no [{}] is \" + \"defined\",\n                        XField.AUTHOR_LINK,\n                        XField.AUTHOR_NAME\n                    );"},{"cwe_ids":["210"],"id":"java_lang_exception","title":"Leakage of sensitive data in exception message","description":"## Description\n\nLeakage of sensitive data in exception messages can lead to data breaches. This vulnerability occurs when sensitive information is included in exceptions, making it accessible to unauthorized users.\n\n## Remediations\n\n- **Do not** include sensitive data in exception messages. This can inadvertently expose private information.\n  ```java\n  throw new Exception(\"error for \" + user.email);\n  ```\n- **Do** use non-sensitive, unique identifiers in exception messages to avoid revealing personal identifiable information (PII).\n  ```java\n  throw new Exception(\"error for \" + user.id);\n  ```","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_exception","line_number":587,"full_filename":"x-pack/plugin/watcher/src/main/java/org/elasticsearch/xpack/watcher/notification/slack/message/Attachment.java","filename":"x-pack/plugin/watcher/src/main/java/org/elasticsearch/xpack/watcher/notification/slack/message/Attachment.java","data_type":{"category_uuid":"14124881-6b92-4fc5-8005-ea7c1c09592e","name":"Fullname"},"category_groups":["PII","Personal Data"],"source":{"start":590,"end":590,"column":{"start":25,"end":43}},"sink":{"start":587,"end":591,"column":{"start":21,"end":23},"content":""},"parent_line_number":587,"fingerprint":"238c1ffc95c0fbd6ecd94aea233777c1_2","old_fingerprint":"238c1ffc95c0fbd6ecd94aea233777c1_2","code_extract":"                    throw new ElasticsearchParseException(\n                        \"could not parse message attachment field. found field [{}], but no [{}] is \" + \"defined\",\n                        XField.AUTHOR_ICON,\n                        XField.AUTHOR_NAME\n                    );"},{"cwe_ids":["330"],"id":"java_lang_insufficiently_random_values","title":"Usage of insufficient random value","description":"## Description\n\nThe use of predictable random values compromises application security, particularly when these values serve security-related functions.\n\n## Remediations\n\n- **Do** utilize a robust library for generating random values to enhance security.\n  ```java\n  SecureRandom random = new SecureRandom();\n  ```\n\n## References\n\n- [Java SecureRandom class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/SecureRandom.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_insufficiently_random_values","line_number":117,"full_filename":"benchmarks/src/main/java/org/elasticsearch/benchmark/compute/operator/BlockBenchmark.java","filename":"benchmarks/src/main/java/org/elasticsearch/benchmark/compute/operator/BlockBenchmark.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":117,"end":117,"column":{"start":42,"end":54}},"sink":{"start":117,"end":117,"column":{"start":42,"end":54},"content":""},"parent_line_number":117,"fingerprint":"222fada4d32c7c5325bbf4e9aeb196ac_0","old_fingerprint":"222fada4d32c7c5325bbf4e9aeb196ac_19","code_extract":"    private static final Random random = new Random();"},{"cwe_ids":["330"],"id":"java_lang_insufficiently_random_values","title":"Usage of insufficient random value","description":"## Description\n\nThe use of predictable random values compromises application security, particularly when these values serve security-related functions.\n\n## Remediations\n\n- **Do** utilize a robust library for generating random values to enhance security.\n  ```java\n  SecureRandom random = new SecureRandom();\n  ```\n\n## References\n\n- [Java SecureRandom class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/SecureRandom.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_insufficiently_random_values","line_number":19,"full_filename":"benchmarks/src/main/java/org/elasticsearch/benchmark/index/codec/tsdb/internal/ConstantIntegerSupplier.java","filename":"benchmarks/src/main/java/org/elasticsearch/benchmark/index/codec/tsdb/internal/ConstantIntegerSupplier.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":19,"end":19,"column":{"start":23,"end":39}},"sink":{"start":19,"end":19,"column":{"start":23,"end":39},"content":""},"parent_line_number":19,"fingerprint":"56f4c3054e86d608cf3c8e6595932171_0","old_fingerprint":"56f4c3054e86d608cf3c8e6595932171_1","code_extract":"        this.random = new Random(seed);"},{"cwe_ids":["330"],"id":"java_lang_insufficiently_random_values","title":"Usage of insufficient random value","description":"## Description\n\nThe use of predictable random values compromises application security, particularly when these values serve security-related functions.\n\n## Remediations\n\n- **Do** utilize a robust library for generating random values to enhance security.\n  ```java\n  SecureRandom random = new SecureRandom();\n  ```\n\n## References\n\n- [Java SecureRandom class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/SecureRandom.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_insufficiently_random_values","line_number":20,"full_filename":"benchmarks/src/main/java/org/elasticsearch/benchmark/index/codec/tsdb/internal/DecreasingIntegerSupplier.java","filename":"benchmarks/src/main/java/org/elasticsearch/benchmark/index/codec/tsdb/internal/DecreasingIntegerSupplier.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":20,"end":20,"column":{"start":23,"end":39}},"sink":{"start":20,"end":20,"column":{"start":23,"end":39},"content":""},"parent_line_number":20,"fingerprint":"48afd12fd5f03cb808bf837cc01622bf_0","old_fingerprint":"48afd12fd5f03cb808bf837cc01622bf_2","code_extract":"        this.random = new Random(seed);"},{"cwe_ids":["330"],"id":"java_lang_insufficiently_random_values","title":"Usage of insufficient random value","description":"## Description\n\nThe use of predictable random values compromises application security, particularly when these values serve security-related functions.\n\n## Remediations\n\n- **Do** utilize a robust library for generating random values to enhance security.\n  ```java\n  SecureRandom random = new SecureRandom();\n  ```\n\n## References\n\n- [Java SecureRandom class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/SecureRandom.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_insufficiently_random_values","line_number":20,"full_filename":"benchmarks/src/main/java/org/elasticsearch/benchmark/index/codec/tsdb/internal/IncreasingIntegerSupplier.java","filename":"benchmarks/src/main/java/org/elasticsearch/benchmark/index/codec/tsdb/internal/IncreasingIntegerSupplier.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":20,"end":20,"column":{"start":23,"end":39}},"sink":{"start":20,"end":20,"column":{"start":23,"end":39},"content":""},"parent_line_number":20,"fingerprint":"d969e29762b88dd234f5064f810edbda_0","old_fingerprint":"d969e29762b88dd234f5064f810edbda_3","code_extract":"        this.random = new Random(seed);"},{"cwe_ids":["330"],"id":"java_lang_insufficiently_random_values","title":"Usage of insufficient random value","description":"## Description\n\nThe use of predictable random values compromises application security, particularly when these values serve security-related functions.\n\n## Remediations\n\n- **Do** utilize a robust library for generating random values to enhance security.\n  ```java\n  SecureRandom random = new SecureRandom();\n  ```\n\n## References\n\n- [Java SecureRandom class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/SecureRandom.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_insufficiently_random_values","line_number":18,"full_filename":"benchmarks/src/main/java/org/elasticsearch/benchmark/index/codec/tsdb/internal/NonSortedIntegerSupplier.java","filename":"benchmarks/src/main/java/org/elasticsearch/benchmark/index/codec/tsdb/internal/NonSortedIntegerSupplier.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":18,"end":18,"column":{"start":23,"end":39}},"sink":{"start":18,"end":18,"column":{"start":23,"end":39},"content":""},"parent_line_number":18,"fingerprint":"9e7ad19dc08085ede3749a6c5fa8912c_0","old_fingerprint":"9e7ad19dc08085ede3749a6c5fa8912c_0","code_extract":"        this.random = new Random(seed);"},{"cwe_ids":["330"],"id":"java_lang_insufficiently_random_values","title":"Usage of insufficient random value","description":"## Description\n\nThe use of predictable random values compromises application security, particularly when these values serve security-related functions.\n\n## Remediations\n\n- **Do** utilize a robust library for generating random values to enhance security.\n  ```java\n  SecureRandom random = new SecureRandom();\n  ```\n\n## References\n\n- [Java SecureRandom class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/SecureRandom.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_insufficiently_random_values","line_number":54,"full_filename":"benchmarks/src/main/java/org/elasticsearch/benchmark/index/mapper/BeatsMapperBenchmark.java","filename":"benchmarks/src/main/java/org/elasticsearch/benchmark/index/mapper/BeatsMapperBenchmark.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":54,"end":54,"column":{"start":23,"end":39}},"sink":{"start":54,"end":54,"column":{"start":23,"end":39},"content":""},"parent_line_number":54,"fingerprint":"81a885d44aae14acd07a93fced24b0ac_0","old_fingerprint":"81a885d44aae14acd07a93fced24b0ac_11","code_extract":"        this.random = new Random(seed);"},{"cwe_ids":["330"],"id":"java_lang_insufficiently_random_values","title":"Usage of insufficient random value","description":"## Description\n\nThe use of predictable random values compromises application security, particularly when these values serve security-related functions.\n\n## Remediations\n\n- **Do** utilize a robust library for generating random values to enhance security.\n  ```java\n  SecureRandom random = new SecureRandom();\n  ```\n\n## References\n\n- [Java SecureRandom class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/SecureRandom.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_insufficiently_random_values","line_number":59,"full_filename":"benchmarks/src/main/java/org/elasticsearch/benchmark/index/mapper/DynamicMapperBenchmark.java","filename":"benchmarks/src/main/java/org/elasticsearch/benchmark/index/mapper/DynamicMapperBenchmark.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":59,"end":59,"column":{"start":23,"end":39}},"sink":{"start":59,"end":59,"column":{"start":23,"end":39},"content":""},"parent_line_number":59,"fingerprint":"4855e2fe2bf03ec60437a309dadc412b_0","old_fingerprint":"4855e2fe2bf03ec60437a309dadc412b_13","code_extract":"        this.random = new Random(seed);"},{"cwe_ids":["330"],"id":"java_lang_insufficiently_random_values","title":"Usage of insufficient random value","description":"## Description\n\nThe use of predictable random values compromises application security, particularly when these values serve security-related functions.\n\n## Remediations\n\n- **Do** utilize a robust library for generating random values to enhance security.\n  ```java\n  SecureRandom random = new SecureRandom();\n  ```\n\n## References\n\n- [Java SecureRandom class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/SecureRandom.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_insufficiently_random_values","line_number":106,"full_filename":"benchmarks/src/main/java/org/elasticsearch/benchmark/search/aggregations/TermsReduceBenchmark.java","filename":"benchmarks/src/main/java/org/elasticsearch/benchmark/search/aggregations/TermsReduceBenchmark.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":106,"end":106,"column":{"start":27,"end":43}},"sink":{"start":106,"end":106,"column":{"start":27,"end":43},"content":""},"parent_line_number":106,"fingerprint":"ac66029734edc1d852931f0b75f5c4eb_0","old_fingerprint":"ac66029734edc1d852931f0b75f5c4eb_18","code_extract":"            Random rand = new Random(seed);"},{"cwe_ids":["330"],"id":"java_lang_insufficiently_random_values","title":"Usage of insufficient random value","description":"## Description\n\nThe use of predictable random values compromises application security, particularly when these values serve security-related functions.\n\n## Remediations\n\n- **Do** utilize a robust library for generating random values to enhance security.\n  ```java\n  SecureRandom random = new SecureRandom();\n  ```\n\n## References\n\n- [Java SecureRandom class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/SecureRandom.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_insufficiently_random_values","line_number":59,"full_filename":"benchmarks/src/main/java/org/elasticsearch/benchmark/tdigest/SortBench.java","filename":"benchmarks/src/main/java/org/elasticsearch/benchmark/tdigest/SortBench.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":59,"end":59,"column":{"start":23,"end":41}},"sink":{"start":59,"end":59,"column":{"start":23,"end":41},"content":""},"parent_line_number":59,"fingerprint":"368a2eeb9c72cecc92ee13824162532f_0","old_fingerprint":"368a2eeb9c72cecc92ee13824162532f_12","code_extract":"        Random prng = new Random(999983);"},{"cwe_ids":["330"],"id":"java_lang_insufficiently_random_values","title":"Usage of insufficient random value","description":"## Description\n\nThe use of predictable random values compromises application security, particularly when these values serve security-related functions.\n\n## Remediations\n\n- **Do** utilize a robust library for generating random values to enhance security.\n  ```java\n  SecureRandom random = new SecureRandom();\n  ```\n\n## References\n\n- [Java SecureRandom class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/SecureRandom.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_insufficiently_random_values","line_number":121,"full_filename":"build-tools-internal/src/main/java/org/elasticsearch/gradle/internal/info/BuildParams.java","filename":"build-tools-internal/src/main/java/org/elasticsearch/gradle/internal/info/BuildParams.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":121,"end":121,"column":{"start":16,"end":78}},"sink":{"start":121,"end":121,"column":{"start":16,"end":78},"content":""},"parent_line_number":121,"fingerprint":"d768d5fe15756f676f9493fd9fef0b99_0","old_fingerprint":"d768d5fe15756f676f9493fd9fef0b99_20","code_extract":"        return new Random(Long.parseUnsignedLong(testSeed.split(\":\")[0], 16));"},{"cwe_ids":["330"],"id":"java_lang_insufficiently_random_values","title":"Usage of insufficient random value","description":"## Description\n\nThe use of predictable random values compromises application security, particularly when these values serve security-related functions.\n\n## Remediations\n\n- **Do** utilize a robust library for generating random values to enhance security.\n  ```java\n  SecureRandom random = new SecureRandom();\n  ```\n\n## References\n\n- [Java SecureRandom class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/SecureRandom.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_insufficiently_random_values","line_number":271,"full_filename":"build-tools-internal/src/main/java/org/elasticsearch/gradle/internal/info/GlobalBuildInfoPlugin.java","filename":"build-tools-internal/src/main/java/org/elasticsearch/gradle/internal/info/GlobalBuildInfoPlugin.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":271,"end":271,"column":{"start":25,"end":63}},"sink":{"start":271,"end":271,"column":{"start":25,"end":63},"content":""},"parent_line_number":271,"fingerprint":"9e62c8bb6a44e5a3322101e1adce6714_0","old_fingerprint":"9e62c8bb6a44e5a3322101e1adce6714_28","code_extract":"            long seed = new Random(System.currentTimeMillis()).nextLong();"},{"cwe_ids":["330"],"id":"java_lang_insufficiently_random_values","title":"Usage of insufficient random value","description":"## Description\n\nThe use of predictable random values compromises application security, particularly when these values serve security-related functions.\n\n## Remediations\n\n- **Do** utilize a robust library for generating random values to enhance security.\n  ```java\n  SecureRandom random = new SecureRandom();\n  ```\n\n## References\n\n- [Java SecureRandom class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/SecureRandom.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_insufficiently_random_values","line_number":31,"full_filename":"build-tools-internal/src/main/java/org/elasticsearch/gradle/internal/util/ports/ReservedPortRange.java","filename":"build-tools-internal/src/main/java/org/elasticsearch/gradle/internal/util/ports/ReservedPortRange.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":31,"end":31,"column":{"start":31,"end":43}},"sink":{"start":31,"end":31,"column":{"start":31,"end":43},"content":""},"parent_line_number":31,"fingerprint":"18f24995293e129e57e2ae976d946239_0","old_fingerprint":"18f24995293e129e57e2ae976d946239_6","code_extract":"        current = startPort + new Random().nextInt(endPort - startPort);"},{"cwe_ids":["330"],"id":"java_lang_insufficiently_random_values","title":"Usage of insufficient random value","description":"## Description\n\nThe use of predictable random values compromises application security, particularly when these values serve security-related functions.\n\n## Remediations\n\n- **Do** utilize a robust library for generating random values to enhance security.\n  ```java\n  SecureRandom random = new SecureRandom();\n  ```\n\n## References\n\n- [Java SecureRandom class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/SecureRandom.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_insufficiently_random_values","line_number":32,"full_filename":"libs/tdigest/src/main/java/org/elasticsearch/tdigest/AVLTreeDigest.java","filename":"libs/tdigest/src/main/java/org/elasticsearch/tdigest/AVLTreeDigest.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":32,"end":32,"column":{"start":24,"end":36}},"sink":{"start":32,"end":32,"column":{"start":24,"end":36},"content":""},"parent_line_number":32,"fingerprint":"99e42f28807aab86fa08ff6077088a89_0","old_fingerprint":"99e42f28807aab86fa08ff6077088a89_8","code_extract":"    final Random gen = new Random();"},{"cwe_ids":["330"],"id":"java_lang_insufficiently_random_values","title":"Usage of insufficient random value","description":"## Description\n\nThe use of predictable random values compromises application security, particularly when these values serve security-related functions.\n\n## Remediations\n\n- **Do** utilize a robust library for generating random values to enhance security.\n  ```java\n  SecureRandom random = new SecureRandom();\n  ```\n\n## References\n\n- [Java SecureRandom class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/SecureRandom.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_insufficiently_random_values","line_number":31,"full_filename":"libs/tdigest/src/main/java/org/elasticsearch/tdigest/Sort.java","filename":"libs/tdigest/src/main/java/org/elasticsearch/tdigest/Sort.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":31,"end":31,"column":{"start":40,"end":52}},"sink":{"start":31,"end":31,"column":{"start":40,"end":52},"content":""},"parent_line_number":31,"fingerprint":"65ca806981820a3bc0e31f7712388132_0","old_fingerprint":"65ca806981820a3bc0e31f7712388132_5","code_extract":"    private static final Random prng = new Random(); // for choosing pivots during quicksort"},{"cwe_ids":["330"],"id":"java_lang_insufficiently_random_values","title":"Usage of insufficient random value","description":"## Description\n\nThe use of predictable random values compromises application security, particularly when these values serve security-related functions.\n\n## Remediations\n\n- **Do** utilize a robust library for generating random values to enhance security.\n  ```java\n  SecureRandom random = new SecureRandom();\n  ```\n\n## References\n\n- [Java SecureRandom class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/SecureRandom.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_insufficiently_random_values","line_number":241,"full_filename":"server/src/internalClusterTest/java/org/elasticsearch/indices/memory/breaker/RandomExceptionCircuitBreakerIT.java","filename":"server/src/internalClusterTest/java/org/elasticsearch/indices/memory/breaker/RandomExceptionCircuitBreakerIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":241,"end":241,"column":{"start":31,"end":47}},"sink":{"start":241,"end":241,"column":{"start":31,"end":47},"content":""},"parent_line_number":241,"fingerprint":"563a081064203e76831840cb3d7bbed9_0","old_fingerprint":"563a081064203e76831840cb3d7bbed9_27","code_extract":"                this.random = new Random(seed);"},{"cwe_ids":["330"],"id":"java_lang_insufficiently_random_values","title":"Usage of insufficient random value","description":"## Description\n\nThe use of predictable random values compromises application security, particularly when these values serve security-related functions.\n\n## Remediations\n\n- **Do** utilize a robust library for generating random values to enhance security.\n  ```java\n  SecureRandom random = new SecureRandom();\n  ```\n\n## References\n\n- [Java SecureRandom class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/SecureRandom.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_insufficiently_random_values","line_number":209,"full_filename":"server/src/internalClusterTest/java/org/elasticsearch/search/basic/SearchWithRandomExceptionsIT.java","filename":"server/src/internalClusterTest/java/org/elasticsearch/search/basic/SearchWithRandomExceptionsIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":209,"end":209,"column":{"start":31,"end":47}},"sink":{"start":209,"end":209,"column":{"start":31,"end":47},"content":""},"parent_line_number":209,"fingerprint":"ca47bcdec44a0c67aa828e9fad3cd45f_0","old_fingerprint":"ca47bcdec44a0c67aa828e9fad3cd45f_25","code_extract":"                this.random = new Random(seed);"},{"cwe_ids":["330"],"id":"java_lang_insufficiently_random_values","title":"Usage of insufficient random value","description":"## Description\n\nThe use of predictable random values compromises application security, particularly when these values serve security-related functions.\n\n## Remediations\n\n- **Do** utilize a robust library for generating random values to enhance security.\n  ```java\n  SecureRandom random = new SecureRandom();\n  ```\n\n## References\n\n- [Java SecureRandom class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/SecureRandom.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_insufficiently_random_values","line_number":192,"full_filename":"server/src/internalClusterTest/java/org/elasticsearch/versioning/ConcurrentSeqNoVersioningIT.java","filename":"server/src/internalClusterTest/java/org/elasticsearch/versioning/ConcurrentSeqNoVersioningIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":192,"end":192,"column":{"start":39,"end":63}},"sink":{"start":192,"end":192,"column":{"start":39,"end":63},"content":""},"parent_line_number":192,"fingerprint":"9b244abc60a79416347d4b4aaaa4b1ec_0","old_fingerprint":"9b244abc60a79416347d4b4aaaa4b1ec_23","code_extract":"        private final Random random = new Random(randomLong());"},{"cwe_ids":["330"],"id":"java_lang_insufficiently_random_values","title":"Usage of insufficient random value","description":"## Description\n\nThe use of predictable random values compromises application security, particularly when these values serve security-related functions.\n\n## Remediations\n\n- **Do** utilize a robust library for generating random values to enhance security.\n  ```java\n  SecureRandom random = new SecureRandom();\n  ```\n\n## References\n\n- [Java SecureRandom class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/SecureRandom.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_insufficiently_random_values","line_number":68,"full_filename":"server/src/main/java/org/elasticsearch/common/Randomness.java","filename":"server/src/main/java/org/elasticsearch/common/Randomness.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":68,"end":68,"column":{"start":20,"end":53}},"sink":{"start":68,"end":68,"column":{"start":20,"end":53},"content":""},"parent_line_number":68,"fingerprint":"0f3b721488abaa9c65757c51c64d20fb_0","old_fingerprint":"0f3b721488abaa9c65757c51c64d20fb_15","code_extract":"            return new Random(setting.get(settings));"},{"cwe_ids":["330"],"id":"java_lang_insufficiently_random_values","title":"Usage of insufficient random value","description":"## Description\n\nThe use of predictable random values compromises application security, particularly when these values serve security-related functions.\n\n## Remediations\n\n- **Do** utilize a robust library for generating random values to enhance security.\n  ```java\n  SecureRandom random = new SecureRandom();\n  ```\n\n## References\n\n- [Java SecureRandom class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/SecureRandom.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_insufficiently_random_values","line_number":199,"full_filename":"server/src/main/java/org/elasticsearch/discovery/DiscoveryModule.java","filename":"server/src/main/java/org/elasticsearch/discovery/DiscoveryModule.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":199,"end":199,"column":{"start":17,"end":56}},"sink":{"start":199,"end":199,"column":{"start":17,"end":56},"content":""},"parent_line_number":199,"fingerprint":"d2530c4e8e88b9225c3768e5b27cd247_0","old_fingerprint":"d2530c4e8e88b9225c3768e5b27cd247_24","code_extract":"                new Random(Randomness.get().nextLong()),"},{"cwe_ids":["330"],"id":"java_lang_insufficiently_random_values","title":"Usage of insufficient random value","description":"## Description\n\nThe use of predictable random values compromises application security, particularly when these values serve security-related functions.\n\n## Remediations\n\n- **Do** utilize a robust library for generating random values to enhance security.\n  ```java\n  SecureRandom random = new SecureRandom();\n  ```\n\n## References\n\n- [Java SecureRandom class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/SecureRandom.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_insufficiently_random_values","line_number":74,"full_filename":"server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/AbstractRareTermsAggregator.java","filename":"server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/AbstractRareTermsAggregator.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":74,"end":74,"column":{"start":87,"end":109}},"sink":{"start":74,"end":74,"column":{"start":87,"end":109},"content":""},"parent_line_number":74,"fingerprint":"1f0a82735a142874b356a8abeddb4707_0","old_fingerprint":"1f0a82735a142874b356a8abeddb4707_16","code_extract":"        SetBackedScalingCuckooFilter filter = new SetBackedScalingCuckooFilter(10000, new Random(filterSeed), precision);"},{"cwe_ids":["330"],"id":"java_lang_insufficiently_random_values","title":"Usage of insufficient random value","description":"## Description\n\nThe use of predictable random values compromises application security, particularly when these values serve security-related functions.\n\n## Remediations\n\n- **Do** utilize a robust library for generating random values to enhance security.\n  ```java\n  SecureRandom random = new SecureRandom();\n  ```\n\n## References\n\n- [Java SecureRandom class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/SecureRandom.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_insufficiently_random_values","line_number":615,"full_filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/datafeed/DatafeedConfig.java","filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/datafeed/DatafeedConfig.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":615,"end":615,"column":{"start":25,"end":53}},"sink":{"start":615,"end":615,"column":{"start":25,"end":53},"content":""},"parent_line_number":615,"fingerprint":"ecb6ec47721e16a1275ede4361684055_0","old_fingerprint":"ecb6ec47721e16a1275ede4361684055_33","code_extract":"        Random random = new Random(jobId.hashCode());"},{"cwe_ids":["330"],"id":"java_lang_insufficiently_random_values","title":"Usage of insufficient random value","description":"## Description\n\nThe use of predictable random values compromises application security, particularly when these values serve security-related functions.\n\n## Remediations\n\n- **Do** utilize a robust library for generating random values to enhance security.\n  ```java\n  SecureRandom random = new SecureRandom();\n  ```\n\n## References\n\n- [Java SecureRandom class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/SecureRandom.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_insufficiently_random_values","line_number":139,"full_filename":"x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/MlDailyMaintenanceService.java","filename":"x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/MlDailyMaintenanceService.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":139,"end":139,"column":{"start":25,"end":59}},"sink":{"start":139,"end":139,"column":{"start":25,"end":59},"content":""},"parent_line_number":139,"fingerprint":"0c35e66ae418c984b5875b1c9e66ae05_0","old_fingerprint":"0c35e66ae418c984b5875b1c9e66ae05_21","code_extract":"        Random random = new Random(clusterName.hashCode());"},{"cwe_ids":["330"],"id":"java_lang_insufficiently_random_values","title":"Usage of insufficient random value","description":"## Description\n\nThe use of predictable random values compromises application security, particularly when these values serve security-related functions.\n\n## Remediations\n\n- **Do** utilize a robust library for generating random values to enhance security.\n  ```java\n  SecureRandom random = new SecureRandom();\n  ```\n\n## References\n\n- [Java SecureRandom class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/SecureRandom.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_insufficiently_random_values","line_number":419,"full_filename":"x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/aggs/changepoint/ChangePointAggregator.java","filename":"x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/aggs/changepoint/ChangePointAggregator.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":419,"end":419,"column":{"start":22,"end":43}},"sink":{"start":419,"end":419,"column":{"start":22,"end":43},"content":""},"parent_line_number":419,"fingerprint":"d116c970f333b0760f927436eab574be_0","old_fingerprint":"d116c970f333b0760f927436eab574be_30","code_extract":"        Random rng = new Random(126832678);"},{"cwe_ids":["330"],"id":"java_lang_insufficiently_random_values","title":"Usage of insufficient random value","description":"## Description\n\nThe use of predictable random values compromises application security, particularly when these values serve security-related functions.\n\n## Remediations\n\n- **Do** utilize a robust library for generating random values to enhance security.\n  ```java\n  SecureRandom random = new SecureRandom();\n  ```\n\n## References\n\n- [Java SecureRandom class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/SecureRandom.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_insufficiently_random_values","line_number":31,"full_filename":"x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/traintestsplit/AbstractReservoirTrainTestSplitter.java","filename":"x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/traintestsplit/AbstractReservoirTrainTestSplitter.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":31,"end":31,"column":{"start":23,"end":48}},"sink":{"start":31,"end":31,"column":{"start":23,"end":48},"content":""},"parent_line_number":31,"fingerprint":"fd78b23a4d26cb687e77ca983b4f2e01_0","old_fingerprint":"fd78b23a4d26cb687e77ca983b4f2e01_7","code_extract":"        this.random = new Random(randomizeSeed);"},{"cwe_ids":["330"],"id":"java_lang_insufficiently_random_values","title":"Usage of insufficient random value","description":"## Description\n\nThe use of predictable random values compromises application security, particularly when these values serve security-related functions.\n\n## Remediations\n\n- **Do** utilize a robust library for generating random values to enhance security.\n  ```java\n  SecureRandom random = new SecureRandom();\n  ```\n\n## References\n\n- [Java SecureRandom class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/SecureRandom.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_insufficiently_random_values","line_number":64,"full_filename":"x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/assignment/planning/LinearProgrammingPlanSolver.java","filename":"x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/assignment/planning/LinearProgrammingPlanSolver.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":64,"end":64,"column":{"start":35,"end":65}},"sink":{"start":64,"end":64,"column":{"start":35,"end":65},"content":""},"parent_line_number":64,"fingerprint":"da720f06ae86d5614b111da08f0a97d3_0","old_fingerprint":"da720f06ae86d5614b111da08f0a97d3_14","code_extract":"    private final Random random = new Random(RANDOMIZATION_SEED);"},{"cwe_ids":["330"],"id":"java_lang_insufficiently_random_values","title":"Usage of insufficient random value","description":"## Description\n\nThe use of predictable random values compromises application security, particularly when these values serve security-related functions.\n\n## Remediations\n\n- **Do** utilize a robust library for generating random values to enhance security.\n  ```java\n  SecureRandom random = new SecureRandom();\n  ```\n\n## References\n\n- [Java SecureRandom class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/SecureRandom.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_insufficiently_random_values","line_number":36,"full_filename":"x-pack/plugin/profiling/src/main/java/org/elasticsearch/xpack/profiling/Resampler.java","filename":"x-pack/plugin/profiling/src/main/java/org/elasticsearch/xpack/profiling/Resampler.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":36,"end":36,"column":{"start":16,"end":46}},"sink":{"start":36,"end":36,"column":{"start":16,"end":46},"content":""},"parent_line_number":36,"fingerprint":"d4c69fe6c02989ce5d9e3b54c6738d60_0","old_fingerprint":"d4c69fe6c02989ce5d9e3b54c6738d60_9","code_extract":"        return new Random(request.hashCode());"},{"cwe_ids":["330"],"id":"java_lang_insufficiently_random_values","title":"Usage of insufficient random value","description":"## Description\n\nThe use of predictable random values compromises application security, particularly when these values serve security-related functions.\n\n## Remediations\n\n- **Do** utilize a robust library for generating random values to enhance security.\n  ```java\n  SecureRandom random = new SecureRandom();\n  ```\n\n## References\n\n- [Java SecureRandom class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/SecureRandom.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_insufficiently_random_values","line_number":224,"full_filename":"x-pack/plugin/snapshot-repo-test-kit/src/main/java/org/elasticsearch/repositories/blobstore/testkit/BlobAnalyzeAction.java","filename":"x-pack/plugin/snapshot-repo-test-kit/src/main/java/org/elasticsearch/repositories/blobstore/testkit/BlobAnalyzeAction.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":224,"end":224,"column":{"start":27,"end":56}},"sink":{"start":224,"end":224,"column":{"start":27,"end":56},"content":""},"parent_line_number":224,"fingerprint":"b3597c7c3f45cbeeb2f3fd13ada44ba4_0","old_fingerprint":"b3597c7c3f45cbeeb2f3fd13ada44ba4_26","code_extract":"            this.random = new Random(this.request.seed);"},{"cwe_ids":["330"],"id":"java_lang_insufficiently_random_values","title":"Usage of insufficient random value","description":"## Description\n\nThe use of predictable random values compromises application security, particularly when these values serve security-related functions.\n\n## Remediations\n\n- **Do** utilize a robust library for generating random values to enhance security.\n  ```java\n  SecureRandom random = new SecureRandom();\n  ```\n\n## References\n\n- [Java SecureRandom class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/SecureRandom.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_insufficiently_random_values","line_number":41,"full_filename":"x-pack/plugin/snapshot-repo-test-kit/src/main/java/org/elasticsearch/repositories/blobstore/testkit/RandomBlobContent.java","filename":"x-pack/plugin/snapshot-repo-test-kit/src/main/java/org/elasticsearch/repositories/blobstore/testkit/RandomBlobContent.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":41,"end":41,"column":{"start":9,"end":25}},"sink":{"start":41,"end":41,"column":{"start":9,"end":25},"content":""},"parent_line_number":41,"fingerprint":"9f1628f3719769ef2e64e99f88bb0ac2_0","old_fingerprint":"9f1628f3719769ef2e64e99f88bb0ac2_10","code_extract":"        new Random(seed).nextBytes(buffer);"},{"cwe_ids":["330"],"id":"java_lang_insufficiently_random_values","title":"Usage of insufficient random value","description":"## Description\n\nThe use of predictable random values compromises application security, particularly when these values serve security-related functions.\n\n## Remediations\n\n- **Do** utilize a robust library for generating random values to enhance security.\n  ```java\n  SecureRandom random = new SecureRandom();\n  ```\n\n## References\n\n- [Java SecureRandom class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/SecureRandom.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_insufficiently_random_values","line_number":179,"full_filename":"x-pack/plugin/snapshot-repo-test-kit/src/main/java/org/elasticsearch/repositories/blobstore/testkit/RepositoryAnalyzeAction.java","filename":"x-pack/plugin/snapshot-repo-test-kit/src/main/java/org/elasticsearch/repositories/blobstore/testkit/RepositoryAnalyzeAction.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":179,"end":179,"column":{"start":64,"end":93}},"sink":{"start":179,"end":179,"column":{"start":64,"end":93},"content":""},"parent_line_number":179,"fingerprint":"d1683aa7136b88faec1a1b0075030446_0","old_fingerprint":"d1683aa7136b88faec1a1b0075030446_22","code_extract":"            final DiscoveryNode targetNode = snapshotNodes.get(new Random(request.getSeed()).nextInt(snapshotNodes.size()));"},{"cwe_ids":["330"],"id":"java_lang_insufficiently_random_values","title":"Usage of insufficient random value","description":"## Description\n\nThe use of predictable random values compromises application security, particularly when these values serve security-related functions.\n\n## Remediations\n\n- **Do** utilize a robust library for generating random values to enhance security.\n  ```java\n  SecureRandom random = new SecureRandom();\n  ```\n\n## References\n\n- [Java SecureRandom class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/SecureRandom.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_insufficiently_random_values","line_number":477,"full_filename":"x-pack/plugin/snapshot-repo-test-kit/src/main/java/org/elasticsearch/repositories/blobstore/testkit/RepositoryAnalyzeAction.java","filename":"x-pack/plugin/snapshot-repo-test-kit/src/main/java/org/elasticsearch/repositories/blobstore/testkit/RepositoryAnalyzeAction.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":477,"end":477,"column":{"start":35,"end":64}},"sink":{"start":477,"end":477,"column":{"start":35,"end":64},"content":""},"parent_line_number":477,"fingerprint":"d1683aa7136b88faec1a1b0075030446_1","old_fingerprint":"d1683aa7136b88faec1a1b0075030446_31","code_extract":"            final Random random = new Random(request.getSeed());"},{"cwe_ids":["330"],"id":"java_lang_insufficiently_random_values","title":"Usage of insufficient random value","description":"## Description\n\nThe use of predictable random values compromises application security, particularly when these values serve security-related functions.\n\n## Remediations\n\n- **Do** utilize a robust library for generating random values to enhance security.\n  ```java\n  SecureRandom random = new SecureRandom();\n  ```\n\n## References\n\n- [Java SecureRandom class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/SecureRandom.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_insufficiently_random_values","line_number":508,"full_filename":"x-pack/plugin/snapshot-repo-test-kit/src/main/java/org/elasticsearch/repositories/blobstore/testkit/RepositoryAnalyzeAction.java","filename":"x-pack/plugin/snapshot-repo-test-kit/src/main/java/org/elasticsearch/repositories/blobstore/testkit/RepositoryAnalyzeAction.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":508,"end":508,"column":{"start":53,"end":82}},"sink":{"start":508,"end":508,"column":{"start":53,"end":82},"content":""},"parent_line_number":508,"fingerprint":"d1683aa7136b88faec1a1b0075030446_2","old_fingerprint":"d1683aa7136b88faec1a1b0075030446_32","code_extract":"                    new UncontendedRegisterAnalysis(new Random(random.nextLong()), nodes, contendedRegisterAnalysisComplete).run();"},{"cwe_ids":["330"],"id":"java_lang_insufficiently_random_values","title":"Usage of insufficient random value","description":"## Description\n\nThe use of predictable random values compromises application security, particularly when these values serve security-related functions.\n\n## Remediations\n\n- **Do** utilize a robust library for generating random values to enhance security.\n  ```java\n  SecureRandom random = new SecureRandom();\n  ```\n\n## References\n\n- [Java SecureRandom class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/SecureRandom.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_insufficiently_random_values","line_number":79,"full_filename":"x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/math/MathProcessor.java","filename":"x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/math/MathProcessor.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":79,"end":79,"column":{"start":30,"end":66}},"sink":{"start":79,"end":79,"column":{"start":30,"end":66},"content":""},"parent_line_number":79,"fingerprint":"575eac55e9243532dba4fe43ca2687ef_0","old_fingerprint":"575eac55e9243532dba4fe43ca2687ef_17","code_extract":"        RANDOM((Object l) -\u003e new Random(((Number) l).longValue()).nextDouble()),"},{"cwe_ids":["330"],"id":"java_lang_insufficiently_random_values","title":"Usage of insufficient random value","description":"## Description\n\nThe use of predictable random values compromises application security, particularly when these values serve security-related functions.\n\n## Remediations\n\n- **Do** utilize a robust library for generating random values to enhance security.\n  ```java\n  SecureRandom random = new SecureRandom();\n  ```\n\n## References\n\n- [Java SecureRandom class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/SecureRandom.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_insufficiently_random_values","line_number":30,"full_filename":"x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/math/Random.java","filename":"x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/math/Random.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":30,"end":30,"column":{"start":16,"end":46}},"sink":{"start":30,"end":30,"column":{"start":16,"end":46},"content":""},"parent_line_number":30,"fingerprint":"b51c3f4812f8ca00c2cffc386277c66f_0","old_fingerprint":"b51c3f4812f8ca00c2cffc386277c66f_4","code_extract":"        return new Random(source(), newChild);"},{"cwe_ids":["330"],"id":"java_lang_insufficiently_random_values","title":"Usage of insufficient random value","description":"## Description\n\nThe use of predictable random values compromises application security, particularly when these values serve security-related functions.\n\n## Remediations\n\n- **Do** utilize a robust library for generating random values to enhance security.\n  ```java\n  SecureRandom random = new SecureRandom();\n  ```\n\n## References\n\n- [Java SecureRandom class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/SecureRandom.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_insufficiently_random_values","line_number":417,"full_filename":"x-pack/plugin/text-structure/src/main/java/org/elasticsearch/xpack/textstructure/structurefinder/DelimitedTextStructureFinder.java","filename":"x-pack/plugin/text-structure/src/main/java/org/elasticsearch/xpack/textstructure/structurefinder/DelimitedTextStructureFinder.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":417,"end":417,"column":{"start":25,"end":56}},"sink":{"start":417,"end":417,"column":{"start":25,"end":56},"content":""},"parent_line_number":417,"fingerprint":"bbb8e60bd534123cf2c0a52de6ea40cf_0","old_fingerprint":"bbb8e60bd534123cf2c0a52de6ea40cf_29","code_extract":"        Random random = new Random(firstRow.hashCode());"},{"cwe_ids":["353"],"id":"java_lang_missing_integrity_check","title":"Missing support for integrity check","description":"## Description\n\nIf a protocol does not include integrity checks (\"checksums\"), it is impossible to determine whether or not an attacker has interfered with or manipulated the transmitted data. This makes it difficult to confirm whether or not the transmitted data has been tampered with or altered by unauthorized parties (Man-in-the-Middle attack).\n\n## Remediations\n\n- **Do** use encryption schemes that include integrity checks to ensure the data has not been modified during transmission.\n  ```java\n  Cipher c = Cipher.getInstance(\"AES/GCM/PKCS5Padding\");\n  ```\n\n## References\n\n- [Java Cipher class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/javax/crypto/Cipher.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_missing_integrity_check","line_number":535,"full_filename":"libs/ssl-config/src/main/java/org/elasticsearch/common/ssl/PemUtils.java","filename":"libs/ssl-config/src/main/java/org/elasticsearch/common/ssl/PemUtils.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":535,"end":535,"column":{"start":25,"end":59}},"sink":{"start":535,"end":535,"column":{"start":25,"end":59},"content":""},"parent_line_number":535,"fingerprint":"b72b856c655952fa6648d2812e2adf0c_0","old_fingerprint":"b72b856c655952fa6648d2812e2adf0c_0","code_extract":"        Cipher cipher = Cipher.getInstance(transformation);"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":515,"full_filename":"libs/geo/src/main/java/org/elasticsearch/geometry/utils/WellKnownText.java","filename":"libs/geo/src/main/java/org/elasticsearch/geometry/utils/WellKnownText.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":515,"end":515,"column":{"start":13,"end":32}},"sink":{"start":515,"end":515,"column":{"start":13,"end":32},"content":""},"parent_line_number":515,"fingerprint":"3e9af09b6c1464ee3b4f01bcde6155c2_0","old_fingerprint":"3e9af09b6c1464ee3b4f01bcde6155c2_45","code_extract":"        if (token.equals(EMPTY)) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":535,"full_filename":"libs/geo/src/main/java/org/elasticsearch/geometry/utils/WellKnownText.java","filename":"libs/geo/src/main/java/org/elasticsearch/geometry/utils/WellKnownText.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":535,"end":535,"column":{"start":13,"end":32}},"sink":{"start":535,"end":535,"column":{"start":13,"end":32},"content":""},"parent_line_number":535,"fingerprint":"3e9af09b6c1464ee3b4f01bcde6155c2_1","old_fingerprint":"3e9af09b6c1464ee3b4f01bcde6155c2_46","code_extract":"        if (token.equals(EMPTY)) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":551,"full_filename":"libs/geo/src/main/java/org/elasticsearch/geometry/utils/WellKnownText.java","filename":"libs/geo/src/main/java/org/elasticsearch/geometry/utils/WellKnownText.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":551,"end":551,"column":{"start":13,"end":32}},"sink":{"start":551,"end":551,"column":{"start":13,"end":32},"content":""},"parent_line_number":551,"fingerprint":"3e9af09b6c1464ee3b4f01bcde6155c2_2","old_fingerprint":"3e9af09b6c1464ee3b4f01bcde6155c2_47","code_extract":"        if (token.equals(EMPTY)) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":624,"full_filename":"libs/geo/src/main/java/org/elasticsearch/geometry/utils/WellKnownText.java","filename":"libs/geo/src/main/java/org/elasticsearch/geometry/utils/WellKnownText.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":624,"end":624,"column":{"start":13,"end":32}},"sink":{"start":624,"end":624,"column":{"start":13,"end":32},"content":""},"parent_line_number":624,"fingerprint":"3e9af09b6c1464ee3b4f01bcde6155c2_3","old_fingerprint":"3e9af09b6c1464ee3b4f01bcde6155c2_50","code_extract":"        if (token.equals(EMPTY)) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":747,"full_filename":"libs/geo/src/main/java/org/elasticsearch/geometry/utils/WellKnownText.java","filename":"libs/geo/src/main/java/org/elasticsearch/geometry/utils/WellKnownText.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":747,"end":747,"column":{"start":13,"end":32}},"sink":{"start":747,"end":747,"column":{"start":13,"end":32},"content":""},"parent_line_number":747,"fingerprint":"3e9af09b6c1464ee3b4f01bcde6155c2_4","old_fingerprint":"3e9af09b6c1464ee3b4f01bcde6155c2_54","code_extract":"        if (token.equals(COMMA) || token.equals(RPAREN)) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":82,"full_filename":"modules/data-streams/src/javaRestTest/java/org/elasticsearch/datastreams/lifecycle/DataStreamLifecyclePermissionsRestIT.java","filename":"modules/data-streams/src/javaRestTest/java/org/elasticsearch/datastreams/lifecycle/DataStreamLifecyclePermissionsRestIT.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":82,"end":82,"column":{"start":57,"end":105}},"sink":{"start":82,"end":82,"column":{"start":57,"end":105},"content":""},"parent_line_number":82,"fingerprint":"1efa166e50af3afceefbc74ebe41bd09_0","old_fingerprint":"1efa166e50af3afceefbc74ebe41bd09_10","code_extract":"        if (superSettings.keySet().contains(authKey) \u0026\u0026 superSettings.get(authKey).equals(nonAdminToken) == false) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":289,"full_filename":"modules/legacy-geo/src/main/java/org/elasticsearch/legacygeo/mapper/LegacyGeoShapeFieldMapper.java","filename":"modules/legacy-geo/src/main/java/org/elasticsearch/legacygeo/mapper/LegacyGeoShapeFieldMapper.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":289,"end":289,"column":{"start":17,"end":54}},"sink":{"start":289,"end":289,"column":{"start":17,"end":54},"content":""},"parent_line_number":289,"fingerprint":"ad86000cf999868ca27e6e06e8008e2d_0","old_fingerprint":"ad86000cf999868ca27e6e06e8008e2d_38","code_extract":"            if (ft.tree().equals(PrefixTrees.GEOHASH)) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":184,"full_filename":"modules/legacy-geo/src/main/java/org/elasticsearch/legacygeo/parsers/GeoWKTParser.java","filename":"modules/legacy-geo/src/main/java/org/elasticsearch/legacygeo/parsers/GeoWKTParser.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":184,"end":184,"column":{"start":13,"end":32}},"sink":{"start":184,"end":184,"column":{"start":13,"end":32},"content":""},"parent_line_number":184,"fingerprint":"75773fe5fc9743cdcdee61233fd8b70c_0","old_fingerprint":"75773fe5fc9743cdcdee61233fd8b70c_30","code_extract":"        if (token.equals(EMPTY)) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":193,"full_filename":"modules/legacy-geo/src/main/java/org/elasticsearch/legacygeo/parsers/GeoWKTParser.java","filename":"modules/legacy-geo/src/main/java/org/elasticsearch/legacygeo/parsers/GeoWKTParser.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":193,"end":193,"column":{"start":13,"end":32}},"sink":{"start":193,"end":193,"column":{"start":13,"end":32},"content":""},"parent_line_number":193,"fingerprint":"75773fe5fc9743cdcdee61233fd8b70c_1","old_fingerprint":"75773fe5fc9743cdcdee61233fd8b70c_31","code_extract":"        if (token.equals(EMPTY)) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":204,"full_filename":"modules/legacy-geo/src/main/java/org/elasticsearch/legacygeo/parsers/GeoWKTParser.java","filename":"modules/legacy-geo/src/main/java/org/elasticsearch/legacygeo/parsers/GeoWKTParser.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":204,"end":204,"column":{"start":13,"end":32}},"sink":{"start":204,"end":204,"column":{"start":13,"end":32},"content":""},"parent_line_number":204,"fingerprint":"75773fe5fc9743cdcdee61233fd8b70c_2","old_fingerprint":"75773fe5fc9743cdcdee61233fd8b70c_32","code_extract":"        if (token.equals(EMPTY)) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":227,"full_filename":"modules/legacy-geo/src/main/java/org/elasticsearch/legacygeo/parsers/GeoWKTParser.java","filename":"modules/legacy-geo/src/main/java/org/elasticsearch/legacygeo/parsers/GeoWKTParser.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":227,"end":227,"column":{"start":13,"end":32}},"sink":{"start":227,"end":227,"column":{"start":13,"end":32},"content":""},"parent_line_number":227,"fingerprint":"75773fe5fc9743cdcdee61233fd8b70c_3","old_fingerprint":"75773fe5fc9743cdcdee61233fd8b70c_33","code_extract":"        if (token.equals(EMPTY)) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":353,"full_filename":"modules/legacy-geo/src/main/java/org/elasticsearch/legacygeo/parsers/GeoWKTParser.java","filename":"modules/legacy-geo/src/main/java/org/elasticsearch/legacygeo/parsers/GeoWKTParser.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":353,"end":353,"column":{"start":13,"end":32}},"sink":{"start":353,"end":353,"column":{"start":13,"end":32},"content":""},"parent_line_number":353,"fingerprint":"75773fe5fc9743cdcdee61233fd8b70c_4","old_fingerprint":"75773fe5fc9743cdcdee61233fd8b70c_41","code_extract":"        if (token.equals(COMMA) || token.equals(RPAREN)) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":37,"full_filename":"modules/repository-s3/src/main/java/org/elasticsearch/repositories/s3/S3BasicSessionCredentials.java","filename":"modules/repository-s3/src/main/java/org/elasticsearch/repositories/s3/S3BasicSessionCredentials.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":37,"end":37,"column":{"start":16,"end":54}},"sink":{"start":37,"end":37,"column":{"start":16,"end":54},"content":""},"parent_line_number":37,"fingerprint":"30bed5474f3c8a894cc778ba56c4efc9_0","old_fingerprint":"30bed5474f3c8a894cc778ba56c4efc9_1","code_extract":"        return sessionToken.equals(that.sessionToken)"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":97,"full_filename":"plugins/discovery-ec2/qa/amazon-ec2/src/yamlRestTest/java/org/elasticsearch/discovery/ec2/AmazonEC2Fixture.java","filename":"plugins/discovery-ec2/qa/amazon-ec2/src/yamlRestTest/java/org/elasticsearch/discovery/ec2/AmazonEC2Fixture.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":97,"end":97,"column":{"start":16,"end":102}},"sink":{"start":97,"end":97,"column":{"start":16,"end":102},"content":""},"parent_line_number":97,"fingerprint":"ed71afa229714b31d781172a46602b0a_0","old_fingerprint":"ed71afa229714b31d781172a46602b0a_14","code_extract":"            \u0026\u0026 request.getHeaders().getOrDefault(X_AWS_EC_2_METADATA_TOKEN, \"\").equals(IMDSV_2_TOKEN)) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":104,"full_filename":"plugins/discovery-ec2/qa/amazon-ec2/src/yamlRestTest/java/org/elasticsearch/discovery/ec2/AmazonEC2Fixture.java","filename":"plugins/discovery-ec2/qa/amazon-ec2/src/yamlRestTest/java/org/elasticsearch/discovery/ec2/AmazonEC2Fixture.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":104,"end":104,"column":{"start":16,"end":102}},"sink":{"start":104,"end":104,"column":{"start":16,"end":102},"content":""},"parent_line_number":104,"fingerprint":"ed71afa229714b31d781172a46602b0a_1","old_fingerprint":"ed71afa229714b31d781172a46602b0a_15","code_extract":"            \u0026\u0026 request.getHeaders().getOrDefault(X_AWS_EC_2_METADATA_TOKEN, \"\").equals(IMDSV_2_TOKEN)) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":118,"full_filename":"plugins/discovery-ec2/qa/amazon-ec2/src/yamlRestTest/java/org/elasticsearch/discovery/ec2/AmazonEC2Fixture.java","filename":"plugins/discovery-ec2/qa/amazon-ec2/src/yamlRestTest/java/org/elasticsearch/discovery/ec2/AmazonEC2Fixture.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":118,"end":118,"column":{"start":20,"end":106}},"sink":{"start":118,"end":118,"column":{"start":20,"end":106},"content":""},"parent_line_number":118,"fingerprint":"ed71afa229714b31d781172a46602b0a_2","old_fingerprint":"ed71afa229714b31d781172a46602b0a_16","code_extract":"                \u0026\u0026 request.getHeaders().getOrDefault(X_AWS_EC_2_METADATA_TOKEN, \"\").equals(IMDSV_2_TOKEN))) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":315,"full_filename":"server/src/main/java/org/elasticsearch/action/fieldcaps/TransportFieldCapabilitiesAction.java","filename":"server/src/main/java/org/elasticsearch/action/fieldcaps/TransportFieldCapabilitiesAction.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":315,"end":315,"column":{"start":16,"end":73}},"sink":{"start":315,"end":315,"column":{"start":16,"end":73},"content":""},"parent_line_number":315,"fingerprint":"fbb8bf8f139e4f815b2ff1b97e79f887_0","old_fingerprint":"fbb8bf8f139e4f815b2ff1b97e79f887_40","code_extract":"            \u0026\u0026 r1.getIndexMappingHash().equals(r2.getIndexMappingHash());"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":1456,"full_filename":"server/src/main/java/org/elasticsearch/cluster/metadata/Metadata.java","filename":"server/src/main/java/org/elasticsearch/cluster/metadata/Metadata.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":1456,"end":1456,"column":{"start":13,"end":94}},"sink":{"start":1456,"end":1456,"column":{"start":13,"end":94},"content":""},"parent_line_number":1456,"fingerprint":"7e399aba009e7834ee9a8a0ff669cecc_0","old_fingerprint":"7e399aba009e7834ee9a8a0ff669cecc_55","code_extract":"        if (metadata1.hashesOfConsistentSettings.equals(metadata2.hashesOfConsistentSettings) == false) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":2765,"full_filename":"server/src/main/java/org/elasticsearch/cluster/metadata/Metadata.java","filename":"server/src/main/java/org/elasticsearch/cluster/metadata/Metadata.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":2765,"end":2765,"column":{"start":32,"end":88}},"sink":{"start":2765,"end":2765,"column":{"start":32,"end":88},"content":""},"parent_line_number":2765,"fingerprint":"7e399aba009e7834ee9a8a0ff669cecc_1","old_fingerprint":"7e399aba009e7834ee9a8a0ff669cecc_57","code_extract":"                    } else if (\"hashes_of_consistent_settings\".equals(currentFieldName)) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":466,"full_filename":"server/src/main/java/org/elasticsearch/common/geo/GeoUtils.java","filename":"server/src/main/java/org/elasticsearch/common/geo/GeoUtils.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":466,"end":466,"column":{"start":13,"end":60}},"sink":{"start":466,"end":466,"column":{"start":13,"end":60},"content":""},"parent_line_number":466,"fingerprint":"381d9fb489bf1affe9b32ecb729b0d00_0","old_fingerprint":"381d9fb489bf1affe9b32ecb729b0d00_44","code_extract":"        if (token.equals(XContentParser.Token.VALUE_NUMBER)) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":244,"full_filename":"server/src/main/java/org/elasticsearch/common/path/PathTrie.java","filename":"server/src/main/java/org/elasticsearch/common/path/PathTrie.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":244,"end":244,"column":{"start":40,"end":62}},"sink":{"start":244,"end":244,"column":{"start":40,"end":62},"content":""},"parent_line_number":244,"fingerprint":"784078a57d44db751f7405151a82c762_0","old_fingerprint":"784078a57d44db751f7405151a82c762_36","code_extract":"                        usedWildcard = token.equals(wildcard);"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":133,"full_filename":"server/src/main/java/org/elasticsearch/common/settings/ConsistentSettingsService.java","filename":"server/src/main/java/org/elasticsearch/common/settings/ConsistentSettingsService.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":133,"end":133,"column":{"start":30,"end":70}},"sink":{"start":133,"end":133,"column":{"start":30,"end":70},"content":""},"parent_line_number":133,"fingerprint":"857431b0c99ea8e0eaddcc9ef1e28989_0","old_fingerprint":"857431b0c99ea8e0eaddcc9ef1e28989_18","code_extract":"                if (false == publishedHash.equals(computedSaltedHash)) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":241,"full_filename":"server/src/main/java/org/elasticsearch/common/settings/ConsistentSettingsService.java","filename":"server/src/main/java/org/elasticsearch/common/settings/ConsistentSettingsService.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":241,"end":241,"column":{"start":25,"end":103}},"sink":{"start":241,"end":241,"column":{"start":25,"end":103},"content":""},"parent_line_number":241,"fingerprint":"857431b0c99ea8e0eaddcc9ef1e28989_1","old_fingerprint":"857431b0c99ea8e0eaddcc9ef1e28989_34","code_extract":"                    if (computedHashesOfConsistentSettings.equals(publishedHashesOfConsistentSettings)) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":44,"full_filename":"server/src/main/java/org/elasticsearch/common/settings/RotatableSecret.java","filename":"server/src/main/java/org/elasticsearch/common/settings/RotatableSecret.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":44,"end":44,"column":{"start":44,"end":77}},"sink":{"start":44,"end":44,"column":{"start":44,"end":77},"content":""},"parent_line_number":44,"fingerprint":"d70094a72f7d9d36b06cfb19379d1812_0","old_fingerprint":"d70094a72f7d9d36b06cfb19379d1812_3","code_extract":"            if (secrets.current == null || secrets.current.equals(newSecret) == false) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":77,"full_filename":"server/src/main/java/org/elasticsearch/common/settings/RotatableSecret.java","filename":"server/src/main/java/org/elasticsearch/common/settings/RotatableSecret.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":77,"end":77,"column":{"start":35,"end":65}},"sink":{"start":77,"end":77,"column":{"start":35,"end":65},"content":""},"parent_line_number":77,"fingerprint":"d70094a72f7d9d36b06cfb19379d1812_1","old_fingerprint":"d70094a72f7d9d36b06cfb19379d1812_8","code_extract":"        if (currentSecretValid \u0026\u0026 secrets.current.equals(secret)) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":80,"full_filename":"server/src/main/java/org/elasticsearch/common/settings/RotatableSecret.java","filename":"server/src/main/java/org/elasticsearch/common/settings/RotatableSecret.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":80,"end":80,"column":{"start":40,"end":68}},"sink":{"start":80,"end":80,"column":{"start":40,"end":68},"content":""},"parent_line_number":80,"fingerprint":"d70094a72f7d9d36b06cfb19379d1812_2","old_fingerprint":"d70094a72f7d9d36b06cfb19379d1812_9","code_extract":"            return priorSecretValid \u0026\u0026 secrets.prior.equals(secret);"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":296,"full_filename":"server/src/main/java/org/elasticsearch/index/query/GeoDistanceQueryBuilder.java","filename":"server/src/main/java/org/elasticsearch/index/query/GeoDistanceQueryBuilder.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":296,"end":296,"column":{"start":36,"end":65}},"sink":{"start":296,"end":296,"column":{"start":36,"end":65},"content":""},"parent_line_number":296,"fingerprint":"ccf3cfea7767835721f0a9a646225915_0","old_fingerprint":"ccf3cfea7767835721f0a9a646225915_39","code_extract":"                        } else if (currentName.equals(\"geohash\")) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":122,"full_filename":"server/src/main/java/org/elasticsearch/index/store/StoreFileMetadata.java","filename":"server/src/main/java/org/elasticsearch/index/store/StoreFileMetadata.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":122,"end":124,"column":{"start":48,"end":35}},"sink":{"start":122,"end":124,"column":{"start":48,"end":35},"content":""},"parent_line_number":122,"fingerprint":"75e3828d4ede69f0ea3d0cd0af606d40_0","old_fingerprint":"75e3828d4ede69f0ea3d0cd0af606d40_17","code_extract":"                final boolean checksumsMatch = Store.digestToString(\n                    CodecUtil.retrieveChecksum(new ByteArrayIndexInput(\"store_file\", hash.bytes, hash.offset, hash.length))\n                ).equals(checksum);"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":151,"full_filename":"server/src/main/java/org/elasticsearch/index/store/StoreFileMetadata.java","filename":"server/src/main/java/org/elasticsearch/index/store/StoreFileMetadata.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":151,"end":151,"column":{"start":20,"end":43}},"sink":{"start":151,"end":151,"column":{"start":20,"end":43},"content":""},"parent_line_number":151,"fingerprint":"75e3828d4ede69f0ea3d0cd0af606d40_1","old_fingerprint":"75e3828d4ede69f0ea3d0cd0af606d40_21","code_extract":"            return hash.equals(other.hash);"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":161,"full_filename":"server/src/main/java/org/elasticsearch/index/store/StoreFileMetadata.java","filename":"server/src/main/java/org/elasticsearch/index/store/StoreFileMetadata.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":161,"end":161,"column":{"start":24,"end":47}},"sink":{"start":161,"end":161,"column":{"start":24,"end":47},"content":""},"parent_line_number":161,"fingerprint":"75e3828d4ede69f0ea3d0cd0af606d40_2","old_fingerprint":"75e3828d4ede69f0ea3d0cd0af606d40_25","code_extract":"                assert hash.equals(other.hash) : this + \" vs \" + other + \" with hashes \" + hash + \" vs \" + other.hash;"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":164,"full_filename":"server/src/main/java/org/elasticsearch/index/store/StoreFileMetadata.java","filename":"server/src/main/java/org/elasticsearch/index/store/StoreFileMetadata.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":164,"end":164,"column":{"start":77,"end":100}},"sink":{"start":164,"end":164,"column":{"start":77,"end":100},"content":""},"parent_line_number":164,"fingerprint":"75e3828d4ede69f0ea3d0cd0af606d40_3","old_fingerprint":"75e3828d4ede69f0ea3d0cd0af606d40_26","code_extract":"        return length == other.length \u0026\u0026 checksum.equals(other.checksum) \u0026\u0026 hash.equals(other.hash);"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":420,"full_filename":"server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/SignificantTermsAggregatorFactory.java","filename":"server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/SignificantTermsAggregatorFactory.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":420,"end":420,"column":{"start":24,"end":60}},"sink":{"start":420,"end":420,"column":{"start":24,"end":60},"content":""},"parent_line_number":420,"fingerprint":"0d5c3cda878ec91f47095f1eebc170ae_0","old_fingerprint":"0d5c3cda878ec91f47095f1eebc170ae_43","code_extract":"            } else if (\"global_ordinals_hash\".equals(value)) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":713,"full_filename":"server/src/main/java/org/elasticsearch/transport/TransportService.java","filename":"server/src/main/java/org/elasticsearch/transport/TransportService.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":713,"end":713,"column":{"start":50,"end":90}},"sink":{"start":713,"end":713,"column":{"start":50,"end":90},"content":""},"parent_line_number":713,"fingerprint":"7f81c11fbd34249094ae51d30d1edd86_0","old_fingerprint":"7f81c11fbd34249094ae51d30d1edd86_53","code_extract":"            return version == Version.CURRENT \u0026\u0026 Build.current().hash().equals(buildHash) == false;"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":35,"full_filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/license/LicenseOverrides.java","filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/license/LicenseOverrides.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":35,"end":35,"column":{"start":16,"end":111}},"sink":{"start":35,"end":35,"column":{"start":16,"end":111},"content":""},"parent_line_number":35,"fingerprint":"22000bf933ee2450b5e1ac19887837d3_0","old_fingerprint":"22000bf933ee2450b5e1ac19887837d3_0","code_extract":"        assert TEST_LICENSE_ID_HASH.equals(\"d180f3dedf21b96eea4021d373ab990cba53eeb6c44832261417e828fcb278f1\");"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":265,"full_filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/FillMaskConfig.java","filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/FillMaskConfig.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":265,"end":265,"column":{"start":21,"end":60}},"sink":{"start":265,"end":265,"column":{"start":21,"end":60},"content":""},"parent_line_number":265,"fingerprint":"218fe20b0d9cfcd9cb4a430e602b9549_0","old_fingerprint":"218fe20b0d9cfcd9cb4a430e602b9549_37","code_extract":"                if (maskToken.equals(tokenizationMaskToken) == false) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":45,"full_filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/utils/XContentObjectTransformer.java","filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/utils/XContentObjectTransformer.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":45,"end":45,"column":{"start":21,"end":68}},"sink":{"start":45,"end":45,"column":{"start":21,"end":68},"content":""},"parent_line_number":45,"fingerprint":"24ca74eba7ebd87ffab95dfe43eec1b2_0","old_fingerprint":"24ca74eba7ebd87ffab95dfe43eec1b2_4","code_extract":"            assert (XContentParser.Token.START_OBJECT.equals(token));"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":166,"full_filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/action/Grant.java","filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/action/Grant.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":166,"end":166,"column":{"start":20,"end":52}},"sink":{"start":166,"end":166,"column":{"start":20,"end":52},"content":""},"parent_line_number":166,"fingerprint":"1bf5a26eca926e580d240e85cc4abf43_0","old_fingerprint":"1bf5a26eca926e580d240e85cc4abf43_27","code_extract":"        } else if (type.equals(PASSWORD_GRANT_TYPE)) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":91,"full_filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/action/user/PutUserRequestBuilder.java","filename":"x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/action/user/PutUserRequestBuilder.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":91,"end":91,"column":{"start":13,"end":52}},"sink":{"start":91,"end":91,"column":{"start":13,"end":52},"content":""},"parent_line_number":91,"fingerprint":"88e2492aecaaa3277f24179fb6d7ae6e_0","old_fingerprint":"88e2492aecaaa3277f24179fb6d7ae6e_12","code_extract":"        if (resolvedHasher.equals(configuredHasher) == false"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":402,"full_filename":"x-pack/plugin/downsample/src/main/java/org/elasticsearch/xpack/downsample/DownsampleShardIndexer.java","filename":"x-pack/plugin/downsample/src/main/java/org/elasticsearch/xpack/downsample/DownsampleShardIndexer.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":402,"end":402,"column":{"start":28,"end":53}},"sink":{"start":402,"end":402,"column":{"start":28,"end":53},"content":""},"parent_line_number":402,"fingerprint":"5b3841a6f79db0b4b5a42d0690ff534a_0","old_fingerprint":"5b3841a6f79db0b4b5a42d0690ff534a_42","code_extract":"                    assert tsidHash.equals(lastTsid) == false || lastTimestamp \u003e= timestamp"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":156,"full_filename":"x-pack/plugin/identity-provider/src/main/java/org/elasticsearch/xpack/idp/saml/sp/WildcardServiceProvider.java","filename":"x-pack/plugin/identity-provider/src/main/java/org/elasticsearch/xpack/idp/saml/sp/WildcardServiceProvider.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":156,"end":156,"column":{"start":25,"end":55}},"sink":{"start":156,"end":156,"column":{"start":25,"end":55},"content":""},"parent_line_number":156,"fingerprint":"5aa35fa4bcdd415dbd846659aac2530d_0","old_fingerprint":"5aa35fa4bcdd415dbd846659aac2530d_22","code_extract":"                    if (entityIdToken.equals(acsToken) == false) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":157,"full_filename":"x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/expression/gen/script/Scripts.java","filename":"x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/expression/gen/script/Scripts.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":157,"end":157,"column":{"start":17,"end":78}},"sink":{"start":157,"end":157,"column":{"start":17,"end":78},"content":""},"parent_line_number":157,"fingerprint":"6befa60f445b112b09ab3d4ff148f47a_0","old_fingerprint":"6befa60f445b112b09ab3d4ff148f47a_23","code_extract":"            if (\"InternalQlScriptUtils.docValue(doc,params.%s)\".equals(token)) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":172,"full_filename":"x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/expression/gen/script/Scripts.java","filename":"x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/expression/gen/script/Scripts.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":172,"end":172,"column":{"start":24,"end":66}},"sink":{"start":172,"end":172,"column":{"start":24,"end":66},"content":""},"parent_line_number":172,"fingerprint":"6befa60f445b112b09ab3d4ff148f47a_1","old_fingerprint":"6befa60f445b112b09ab3d4ff148f47a_28","code_extract":"            } else if (\"InternalQlScriptUtils.not(\".equals(token)) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":174,"full_filename":"x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/expression/gen/script/Scripts.java","filename":"x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/expression/gen/script/Scripts.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":174,"end":174,"column":{"start":24,"end":49}},"sink":{"start":174,"end":174,"column":{"start":24,"end":49},"content":""},"parent_line_number":174,"fingerprint":"6befa60f445b112b09ab3d4ff148f47a_2","old_fingerprint":"6befa60f445b112b09ab3d4ff148f47a_29","code_extract":"            } else if (\"params.%s\".equals(token)) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":1582,"full_filename":"x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/Security.java","filename":"x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/Security.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":1582,"end":1582,"column":{"start":17,"end":47}},"sink":{"start":1582,"end":1582,"column":{"start":17,"end":47},"content":""},"parent_line_number":1582,"fingerprint":"47e0483a50c019e15eeef2870b196e7e_0","old_fingerprint":"47e0483a50c019e15eeef2870b196e7e_56","code_extract":"            if (hashAlgoName.equals(\"ssha256\") == false \u0026\u0026 hashAlgoName.startsWith(\"pbkdf2\") == false) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":74,"full_filename":"x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/action/user/ChangePasswordRequestBuilder.java","filename":"x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/action/user/ChangePasswordRequestBuilder.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":74,"end":74,"column":{"start":13,"end":52}},"sink":{"start":74,"end":74,"column":{"start":13,"end":52},"content":""},"parent_line_number":74,"fingerprint":"37ab2fa6e33f13c2667705ed26039433_0","old_fingerprint":"37ab2fa6e33f13c2667705ed26039433_6","code_extract":"        if (resolvedHasher.equals(configuredHasher) == false"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":54,"full_filename":"x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/action/user/TransportChangePasswordAction.java","filename":"x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/action/user/TransportChangePasswordAction.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":54,"end":54,"column":{"start":13,"end":57}},"sink":{"start":54,"end":54,"column":{"start":13,"end":57},"content":""},"parent_line_number":54,"fingerprint":"92cbfcb6b8f02fc27dbf5ebeff724111_0","old_fingerprint":"92cbfcb6b8f02fc27dbf5ebeff724111_5","code_extract":"        if (requestPwdHashAlgo.equals(configPwdHashAlgo) == false"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":591,"full_filename":"x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/TokenService.java","filename":"x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/TokenService.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":591,"end":591,"column":{"start":61,"end":112}},"sink":{"start":591,"end":591,"column":{"start":61,"end":112},"content":""},"parent_line_number":591,"fingerprint":"474e96a7893e76372c00eac88774674b_0","old_fingerprint":"474e96a7893e76372c00eac88774674b_48","code_extract":"                    } else if (storedAccessToken != null \u0026\u0026 storedAccessToken.equals(accessSource.get(\"token\")) == false) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":599,"full_filename":"x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/TokenService.java","filename":"x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/TokenService.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":599,"end":599,"column":{"start":54,"end":107}},"sink":{"start":599,"end":599,"column":{"start":54,"end":107},"content":""},"parent_line_number":599,"fingerprint":"474e96a7893e76372c00eac88774674b_1","old_fingerprint":"474e96a7893e76372c00eac88774674b_49","code_extract":"                        \u0026\u0026 (refreshSource == null || storedRefreshToken.equals(refreshSource.get(\"token\")) == false)) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":142,"full_filename":"x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/esnative/tool/ResetPasswordTool.java","filename":"x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/esnative/tool/ResetPasswordTool.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":142,"end":142,"column":{"start":21,"end":48}},"sink":{"start":142,"end":142,"column":{"start":21,"end":48},"content":""},"parent_line_number":142,"fingerprint":"c126db8e4c1132d19d5e39c3ec576586_0","old_fingerprint":"c126db8e4c1132d19d5e39c3ec576586_19","code_extract":"                if (password1.equals(password2) == false) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":242,"full_filename":"x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/esnative/tool/SetupPasswordTool.java","filename":"x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/esnative/tool/SetupPasswordTool.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":242,"end":242,"column":{"start":25,"end":52}},"sink":{"start":242,"end":242,"column":{"start":25,"end":52},"content":""},"parent_line_number":242,"fingerprint":"7e6867ed087288d3965c7554d0f8252d_0","old_fingerprint":"7e6867ed087288d3965c7554d0f8252d_35","code_extract":"                    if (password1.equals(password2) == false) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":143,"full_filename":"x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/service/ServiceAccountToken.java","filename":"x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/service/ServiceAccountToken.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":143,"end":143,"column":{"start":48,"end":74}},"sink":{"start":143,"end":143,"column":{"start":48,"end":74},"content":""},"parent_line_number":143,"fingerprint":"416d9c69cb6f97b8b57e4ab7bdbe3a5b_0","old_fingerprint":"416d9c69cb6f97b8b57e4ab7bdbe3a5b_20","code_extract":"        return tokenId.equals(that.tokenId) \u0026\u0026 secret.equals(that.secret);"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":160,"full_filename":"x-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/index/query/GeoGridQueryBuilder.java","filename":"x-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/index/query/GeoGridQueryBuilder.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":160,"end":160,"column":{"start":24,"end":54}},"sink":{"start":160,"end":160,"column":{"start":24,"end":54},"content":""},"parent_line_number":160,"fingerprint":"62d83f3b1b0d31f2d56edd0b350690f3_0","old_fingerprint":"62d83f3b1b0d31f2d56edd0b350690f3_24","code_extract":"            } else if (GEOHASH.getName().equals(name)) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":44,"full_filename":"x-pack/plugin/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/DebuggingInvoker.java","filename":"x-pack/plugin/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/DebuggingInvoker.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":44,"end":44,"column":{"start":18,"end":41}},"sink":{"start":44,"end":44,"column":{"start":18,"end":41},"content":""},"parent_line_number":44,"fingerprint":"e82588dddae23d5597cd80a0abeebc73_0","old_fingerprint":"e82588dddae23d5597cd80a0abeebc73_2","code_extract":"        else if (\"hashCode\".equals(name) \u0026\u0026 params.length == 0) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":87,"full_filename":"x-pack/plugin/watcher/src/main/java/org/elasticsearch/xpack/watcher/trigger/schedule/support/MonthTimes.java","filename":"x-pack/plugin/watcher/src/main/java/org/elasticsearch/xpack/watcher/trigger/schedule/support/MonthTimes.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":87,"end":87,"column":{"start":16,"end":64}},"sink":{"start":87,"end":87,"column":{"start":16,"end":64},"content":""},"parent_line_number":87,"fingerprint":"10927d54b1a3838bc4018ccf788d8a7c_0","old_fingerprint":"10927d54b1a3838bc4018ccf788d8a7c_11","code_extract":"            \u0026\u0026 newHashSet(times).equals(newHashSet(that.times));"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":76,"full_filename":"x-pack/plugin/watcher/src/main/java/org/elasticsearch/xpack/watcher/trigger/schedule/support/WeekTimes.java","filename":"x-pack/plugin/watcher/src/main/java/org/elasticsearch/xpack/watcher/trigger/schedule/support/WeekTimes.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":76,"end":76,"column":{"start":16,"end":64}},"sink":{"start":76,"end":76,"column":{"start":16,"end":64},"content":""},"parent_line_number":76,"fingerprint":"fffc5b1e80c339e67a0c73e2b587cbc0_0","old_fingerprint":"fffc5b1e80c339e67a0c73e2b587cbc0_7","code_extract":"            \u0026\u0026 newHashSet(times).equals(newHashSet(that.times));"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":95,"full_filename":"x-pack/plugin/watcher/src/main/java/org/elasticsearch/xpack/watcher/trigger/schedule/support/YearTimes.java","filename":"x-pack/plugin/watcher/src/main/java/org/elasticsearch/xpack/watcher/trigger/schedule/support/YearTimes.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":95,"end":95,"column":{"start":16,"end":64}},"sink":{"start":95,"end":95,"column":{"start":16,"end":64},"content":""},"parent_line_number":95,"fingerprint":"93fcfd04e0889c2bc2ef831494753a71_0","old_fingerprint":"93fcfd04e0889c2bc2ef831494753a71_13","code_extract":"            \u0026\u0026 newHashSet(times).equals(newHashSet(that.times));"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":625,"full_filename":"x-pack/plugin/wildcard/src/main/java/org/elasticsearch/xpack/wildcard/mapper/WildcardFieldMapper.java","filename":"x-pack/plugin/wildcard/src/main/java/org/elasticsearch/xpack/wildcard/mapper/WildcardFieldMapper.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":625,"end":625,"column":{"start":34,"end":84}},"sink":{"start":625,"end":625,"column":{"start":34,"end":84},"content":""},"parent_line_number":625,"fingerprint":"056f02135cafcae6c6ca58a803f8363e_0","old_fingerprint":"056f02135cafcae6c6ca58a803f8363e_51","code_extract":"            if (tokenSize \u003c 2 || token.equals(WildcardFieldMapper.TOKEN_END_STRING)) {"},{"cwe_ids":["208"],"id":"java_lang_observable_timing","title":"Observable Timing Discrepancy","description":"## Description\n\nObservable Timing Discrepancy occurs when the time it takes for certain operations to complete can be measured and observed by attackers. This vulnerability is particularly concerning when operations involve sensitive information, such as password checks or secret comparisons. If attackers can analyze how long these operations take, they might be able to deduce confidential details, putting your data at risk.\n\n## Remediations\n\n- **Do** implement algorithms that process sensitive information in constant time. This approach helps prevent attackers from guessing secrets based on the duration of operations.\n- **Do** use built-in security features and cryptographic libraries that offer functions safe from timing attacks for comparing secret values.\n- **Do not** use direct string comparisons for sensitive information, as this can lead to early termination of the function if a mismatch is found, revealing timing information.\n  ```java\n    boolean isAdmin = \"admin\".equals(username); // unsafe\n  ```\n- **Do not** design application logic that changes execution paths in a manner that could introduce timing discrepancies based on user input or secret values.\n\n## References\n\n- [OWASP Guide to Cryptography](https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_observable_timing","line_number":678,"full_filename":"x-pack/plugin/wildcard/src/main/java/org/elasticsearch/xpack/wildcard/mapper/WildcardFieldMapper.java","filename":"x-pack/plugin/wildcard/src/main/java/org/elasticsearch/xpack/wildcard/mapper/WildcardFieldMapper.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":678,"end":678,"column":{"start":46,"end":96}},"sink":{"start":678,"end":678,"column":{"start":46,"end":96},"content":""},"parent_line_number":678,"fingerprint":"056f02135cafcae6c6ca58a803f8363e_1","old_fingerprint":"056f02135cafcae6c6ca58a803f8363e_52","code_extract":"                        if (tokenSize \u003c 2 || token.equals(WildcardFieldMapper.TOKEN_END_STRING)) {"},{"cwe_ids":["328"],"id":"java_lang_weak_hash_sha1","title":"Usage of weak hashing library (SHA-1)","description":"## Description\n\nUsing a weak hashing library like SHA-1 increases the risk of data breaches. SHA-1 in particular is vulnerable to collision attacks, where two different inputs can produce the same hash value, compromising data integrity and security.\n\n## Remediations\n\n- **Do not** use SHA-1 for hashing. It is no longer considered secure.\n  ```java\n  MessageDigest md = MessageDigest.getInstance(\"SHA-1\"); // unsafe\n  ```\n- **Do** use stronger hashing algorithms such as SHA-256 to enhance security.\n  ```java\n  MessageDigest md = MessageDigest.getInstance(\"SHA-256\");\n  ```\n\n## References\n\n- [Java MessageDigest class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/MessageDigest.html)","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_weak_hash_sha1","line_number":619,"full_filename":"distribution/tools/plugin-cli/src/main/java/org/elasticsearch/plugins/cli/InstallPluginAction.java","filename":"distribution/tools/plugin-cli/src/main/java/org/elasticsearch/plugins/cli/InstallPluginAction.java","category_groups":["PII","Personal Data","Personal Data (Sensitive)"],"source":{"start":619,"end":619,"column":{"start":21,"end":50}},"sink":{"start":619,"end":619,"column":{"start":21,"end":50},"content":""},"parent_line_number":619,"fingerprint":"f3852e80a5ba91b931279ba3b6517af9_0","old_fingerprint":"f3852e80a5ba91b931279ba3b6517af9_0","code_extract":"                    digest.update(bytes, 0, read);"}]}
